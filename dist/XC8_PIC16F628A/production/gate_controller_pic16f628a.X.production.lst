

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 23 07:47:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  0092                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  008C                     	;# 
   153  008E                     	;# 
   154  0092                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009F                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  008C                     	;# 
   190  008E                     	;# 
   191  0092                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0092                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009F                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  008C                     	;# 
   264  008E                     	;# 
   265  0092                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009F                     	;# 
   273                           
   274                           	psect	idataCOMMON
   275  01A6                     __pidataCOMMON:	
   276                           
   277                           ;initializer for _counter
   278  01A6  3414               	retlw	20
   279  01A7  3400               	retlw	0
   280                           
   281                           ;initializer for _overtorgue_flag
   282  01A8  3401               	retlw	1
   283  000B                     _INTCON	set	11
   284  0005                     _PORTA	set	5
   285  001F                     _CMCON	set	31
   286  0037                     _RB7	set	55
   287  002A                     _RA2	set	42
   288  002B                     _RA3	set	43
   289  002C                     _RA4	set	44
   290  0036                     _RB6	set	54
   291  0058                     _RBIF	set	88
   292  0029                     _RA1	set	41
   293  0028                     _RA0	set	40
   294  0035                     _RB5	set	53
   295  0034                     _RB4	set	52
   296  0059                     _INTF	set	89
   297  0086                     _TRISB	set	134
   298  0085                     _TRISA	set	133
   299  040E                     _INTEDG	set	1038
   300                           
   301                           ; #config settings
   302  0000                     
   303                           	psect	cinit
   304  000B                     start_initialization:	
   305  000B                     __initialization:	
   306                           
   307                           ; Initialize objects allocated to COMMON
   308  000B  21A6               	fcall	__pidataCOMMON	;fetch initializer
   309  000C  00F5               	movwf	__pdataCOMMON& (0+127)
   310  000D  21A7               	fcall	__pidataCOMMON+1	;fetch initializer
   311  000E  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   312  000F  21A8               	fcall	__pidataCOMMON+2	;fetch initializer
   313  0010  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   314                           
   315                           ; Clear objects allocated to COMMON
   316  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   317  0012                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  0012                     __end_of__initialization:	
   321  0012  0183               	clrf	3
   322  0013  2814               	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0078                     __pbssCOMMON:	
   326  0078                     _movement_direction:	
   327  0078                     	ds	1
   328                           
   329                           	psect	dataCOMMON
   330  0075                     __pdataCOMMON:	
   331  0075                     _counter:	
   332  0075                     	ds	2
   333  0077                     _overtorgue_flag:	
   334  0077                     	ds	1
   335                           
   336                           	psect	cstackCOMMON
   337  0070                     __pcstackCOMMON:	
   338  0070                     ?_ConfigureOscillator:	
   339  0070                     ?_InitApp:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_my_isr_routine:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_my_isr_routine:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0070                     	ds	5
   354  0075                     ??_ConfigureOscillator:	
   355                           
   356                           	psect	cstackBANK0
   357  0020                     __pcstackBANK0:	
   358                           ; 1 bytes @ 0x5
   359                           
   360  0020                     ??_InitApp:	
   361                           
   362                           ; 1 bytes @ 0x0
   363  0020                     	ds	3
   364  0023                     ??_main:	
   365                           
   366                           ; 1 bytes @ 0x3
   367  0023                     	ds	3
   368                           
   369                           	psect	maintext
   370  0014                     __pmaintext:	
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 30 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   390 ;;      Params:         0       0       0       0
   391 ;;      Locals:         0       0       0       0
   392 ;;      Temps:          0       3       0       0
   393 ;;      Totals:         0       3       0       0
   394 ;;Total ram usage:        3 bytes
   395 ;; Hardware stack levels required when called:    2
   396 ;; This function calls:
   397 ;;		_ConfigureOscillator
   398 ;;		_InitApp
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  0014                     _main:	
   407  0014                     l1027:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   410                           
   411                           
   412                           ;main.c: 33:     ConfigureOscillator();
   413  0014  21A9               	fcall	_ConfigureOscillator
   414  0015                     l1029:	
   415                           
   416                           ;main.c: 36:     InitApp();
   417  0015  214C               	fcall	_InitApp
   418  0016                     l1031:	
   419                           
   420                           ;main.c: 40:     {;main.c: 41:         if (overtorgue_flag==0 ) {
   421  0016  0877               	movf	_overtorgue_flag,w
   422  0017  1D03               	btfss	3,2
   423  0018  281A               	goto	u601
   424  0019  281B               	goto	u600
   425  001A                     u601:	
   426  001A  2822               	goto	l77
   427  001B                     u600:	
   428  001B                     l1033:	
   429                           
   430                           ;main.c: 43:             RA4 = 1;
   431  001B  1283               	bcf	3,5	;RP0=0, select bank0
   432  001C  1303               	bcf	3,6	;RP1=0, select bank0
   433  001D  1605               	bsf	5,4	;volatile
   434                           
   435                           ;main.c: 44:             RA3= 1;
   436  001E  1585               	bsf	5,3	;volatile
   437  001F                     l1035:	
   438                           
   439                           ;main.c: 45:             RA2 = !RA2;
   440  001F  3004               	movlw	4
   441  0020  0685               	xorwf	5,f
   442                           
   443                           ;main.c: 47:         } else if (RB4==0 && RB5==0) {
   444  0021  28AD               	goto	l1077
   445  0022                     l77:	
   446  0022  1283               	bcf	3,5	;RP0=0, select bank0
   447  0023  1303               	bcf	3,6	;RP1=0, select bank0
   448  0024  1A06               	btfsc	6,4	;volatile
   449  0025  2827               	goto	u611
   450  0026  2828               	goto	u610
   451  0027                     u611:	
   452  0027  2863               	goto	l79
   453  0028                     u610:	
   454  0028                     l1037:	
   455  0028  1A86               	btfsc	6,5	;volatile
   456  0029  282B               	goto	u621
   457  002A  282C               	goto	u620
   458  002B                     u621:	
   459  002B  2863               	goto	l79
   460  002C                     u620:	
   461  002C                     l1039:	
   462                           
   463                           ;main.c: 49:             RA4 = 1;
   464  002C  1605               	bsf	5,4	;volatile
   465                           
   466                           ;main.c: 50:             RA3= 1;
   467  002D  1585               	bsf	5,3	;volatile
   468                           
   469                           ;main.c: 51:             RA2 = 0;
   470  002E  1105               	bcf	5,2	;volatile
   471  002F                     l1041:	
   472                           
   473                           ;main.c: 52:             _delay((unsigned long)((200)*(4000000/4000.0)));
   474  002F  3002               	movlw	2
   475  0030  1283               	bcf	3,5	;RP0=0, select bank0
   476  0031  1303               	bcf	3,6	;RP1=0, select bank0
   477  0032  00A5               	movwf	??_main+2
   478  0033  3004               	movlw	4
   479  0034  00A4               	movwf	??_main+1
   480  0035  30BA               	movlw	186
   481  0036  00A3               	movwf	??_main
   482  0037                     u757:	
   483  0037  0BA3               	decfsz	??_main,f
   484  0038  2837               	goto	u757
   485  0039  0BA4               	decfsz	??_main+1,f
   486  003A  2837               	goto	u757
   487  003B  0BA5               	decfsz	??_main+2,f
   488  003C  2837               	goto	u757
   489  003D                     l1043:	
   490                           
   491                           ;main.c: 53:             RA2 = 1;
   492  003D  1283               	bcf	3,5	;RP0=0, select bank0
   493  003E  1303               	bcf	3,6	;RP1=0, select bank0
   494  003F  1505               	bsf	5,2	;volatile
   495                           
   496                           ;main.c: 54:             _delay((unsigned long)((200)*(4000000/4000.0)));
   497  0040  3002               	movlw	2
   498  0041  1283               	bcf	3,5	;RP0=0, select bank0
   499  0042  1303               	bcf	3,6	;RP1=0, select bank0
   500  0043  00A5               	movwf	??_main+2
   501  0044  3004               	movlw	4
   502  0045  00A4               	movwf	??_main+1
   503  0046  30BA               	movlw	186
   504  0047  00A3               	movwf	??_main
   505  0048                     u767:	
   506  0048  0BA3               	decfsz	??_main,f
   507  0049  2848               	goto	u767
   508  004A  0BA4               	decfsz	??_main+1,f
   509  004B  2848               	goto	u767
   510  004C  0BA5               	decfsz	??_main+2,f
   511  004D  2848               	goto	u767
   512  004E                     l1045:	
   513                           
   514                           ;main.c: 55:             RA2 = 0;
   515  004E  1283               	bcf	3,5	;RP0=0, select bank0
   516  004F  1303               	bcf	3,6	;RP1=0, select bank0
   517  0050  1105               	bcf	5,2	;volatile
   518                           
   519                           ;main.c: 56:             _delay((unsigned long)((200)*(4000000/4000.0)));
   520  0051  3002               	movlw	2
   521  0052  1283               	bcf	3,5	;RP0=0, select bank0
   522  0053  1303               	bcf	3,6	;RP1=0, select bank0
   523  0054  00A5               	movwf	??_main+2
   524  0055  3004               	movlw	4
   525  0056  00A4               	movwf	??_main+1
   526  0057  30BA               	movlw	186
   527  0058  00A3               	movwf	??_main
   528  0059                     u777:	
   529  0059  0BA3               	decfsz	??_main,f
   530  005A  2859               	goto	u777
   531  005B  0BA4               	decfsz	??_main+1,f
   532  005C  2859               	goto	u777
   533  005D  0BA5               	decfsz	??_main+2,f
   534  005E  2859               	goto	u777
   535  005F                     l1047:	
   536                           
   537                           ;main.c: 57:             RA2 = 1;
   538  005F  1283               	bcf	3,5	;RP0=0, select bank0
   539  0060  1303               	bcf	3,6	;RP1=0, select bank0
   540  0061  1505               	bsf	5,2	;volatile
   541                           
   542                           ;main.c: 59:         } else if(RB4==0 && RB5==1) {
   543  0062  28AD               	goto	l1077
   544  0063                     l79:	
   545  0063  1A06               	btfsc	6,4	;volatile
   546  0064  2866               	goto	u631
   547  0065  2867               	goto	u630
   548  0066                     u631:	
   549  0066  287E               	goto	l81
   550  0067                     u630:	
   551  0067                     l1049:	
   552  0067  1E86               	btfss	6,5	;volatile
   553  0068  286A               	goto	u641
   554  0069  286B               	goto	u640
   555  006A                     u641:	
   556  006A  287E               	goto	l81
   557  006B                     u640:	
   558  006B                     l1051:	
   559                           
   560                           ;main.c: 61:             RA4 = 1;
   561  006B  1605               	bsf	5,4	;volatile
   562                           
   563                           ;main.c: 62:             RA3 = 1;
   564  006C  1585               	bsf	5,3	;volatile
   565  006D                     l1053:	
   566                           
   567                           ;main.c: 63:             if (counter>0) {
   568  006D  0876               	movf	_counter+1,w
   569  006E  3A80               	xorlw	128
   570  006F  00FF               	movwf	btemp+1
   571  0070  3080               	movlw	128
   572  0071  027F               	subwf	btemp+1,w
   573  0072  1D03               	skipz
   574  0073  2876               	goto	u655
   575  0074  3001               	movlw	1
   576  0075  0275               	subwf	_counter,w
   577  0076                     u655:	
   578  0076  1C03               	skipc
   579  0077  2879               	goto	u651
   580  0078  287A               	goto	u650
   581  0079                     u651:	
   582  0079  285F               	goto	l1047
   583  007A                     u650:	
   584  007A                     l1055:	
   585                           
   586                           ;main.c: 64:                 RA2 = 0;
   587  007A  1283               	bcf	3,5	;RP0=0, select bank0
   588  007B  1303               	bcf	3,6	;RP1=0, select bank0
   589  007C  1105               	bcf	5,2	;volatile
   590                           
   591                           ;main.c: 65:             } else {
   592  007D  28AD               	goto	l1077
   593  007E                     l81:	
   594  007E  1E06               	btfss	6,4	;volatile
   595  007F  2881               	goto	u661
   596  0080  2882               	goto	u660
   597  0081                     u661:	
   598  0081  288A               	goto	l85
   599  0082                     u660:	
   600  0082                     l1057:	
   601  0082  1A86               	btfsc	6,5	;volatile
   602  0083  2885               	goto	u671
   603  0084  2886               	goto	u670
   604  0085                     u671:	
   605  0085  288A               	goto	l85
   606  0086                     u670:	
   607  0086                     l1059:	
   608                           
   609                           ;main.c: 70:             RA4=0;
   610  0086  1205               	bcf	5,4	;volatile
   611                           
   612                           ;main.c: 71:             RA3=1;
   613  0087  1585               	bsf	5,3	;volatile
   614                           
   615                           ;main.c: 72:             RA2=1;
   616  0088  1505               	bsf	5,2	;volatile
   617                           
   618                           ;main.c: 74:         } else if(RB4==1
   619  0089  28AD               	goto	l1077
   620  008A                     l85:	
   621  008A  1E06               	btfss	6,4	;volatile
   622  008B  288D               	goto	u681
   623  008C  288E               	goto	u680
   624  008D                     u681:	
   625  008D  289A               	goto	l87
   626  008E                     u680:	
   627  008E                     l1061:	
   628  008E  1E86               	btfss	6,5	;volatile
   629  008F  2891               	goto	u691
   630  0090  2892               	goto	u690
   631  0091                     u691:	
   632  0091  289A               	goto	l87
   633  0092                     u690:	
   634  0092                     l1063:	
   635  0092  1B86               	btfsc	6,7	;volatile
   636  0093  2895               	goto	u701
   637  0094  2896               	goto	u700
   638  0095                     u701:	
   639  0095  289A               	goto	l87
   640  0096                     u700:	
   641  0096                     l1065:	
   642                           
   643                           ;main.c: 76:                     && RB7==0) {;main.c: 78:             RA4 = 1;
   644  0096  1605               	bsf	5,4	;volatile
   645  0097                     l1067:	
   646                           
   647                           ;main.c: 79:             RA3=!RA3;
   648  0097  3008               	movlw	8
   649  0098  0685               	xorwf	5,f
   650  0099  285F               	goto	l1047
   651  009A                     l87:	
   652  009A  1E06               	btfss	6,4	;volatile
   653  009B  289D               	goto	u711
   654  009C  289E               	goto	u710
   655  009D                     u711:	
   656  009D  28AA               	goto	l89
   657  009E                     u710:	
   658  009E                     l1071:	
   659  009E  1E86               	btfss	6,5	;volatile
   660  009F  28A1               	goto	u721
   661  00A0  28A2               	goto	u720
   662  00A1                     u721:	
   663  00A1  28AA               	goto	l89
   664  00A2                     u720:	
   665  00A2                     l1073:	
   666  00A2  1F86               	btfss	6,7	;volatile
   667  00A3  28A5               	goto	u731
   668  00A4  28A6               	goto	u730
   669  00A5                     u731:	
   670  00A5  28AA               	goto	l89
   671  00A6                     u730:	
   672  00A6                     l1075:	
   673                           
   674                           ;main.c: 84:                     && RB7==1) {;main.c: 86:             RA4 = 1;
   675  00A6  1605               	bsf	5,4	;volatile
   676                           
   677                           ;main.c: 87:             RA3=0;
   678  00A7  1185               	bcf	5,3	;volatile
   679                           
   680                           ;main.c: 88:             RA2 = 1;
   681  00A8  1505               	bsf	5,2	;volatile
   682                           
   683                           ;main.c: 90:         } else {
   684  00A9  28AD               	goto	l1077
   685  00AA                     l89:	
   686                           
   687                           ;main.c: 91:             RA4 = 1;
   688  00AA  1605               	bsf	5,4	;volatile
   689                           
   690                           ;main.c: 92:             RA3= 1;
   691  00AB  1585               	bsf	5,3	;volatile
   692                           
   693                           ;main.c: 93:             RA2 = 1;
   694  00AC  1505               	bsf	5,2	;volatile
   695  00AD                     l1077:	
   696                           
   697                           ;main.c: 96:         counter--;
   698  00AD  30FF               	movlw	255
   699  00AE  07F5               	addwf	_counter,f
   700  00AF  1803               	skipnc
   701  00B0  0AF6               	incf	_counter+1,f
   702  00B1  30FF               	movlw	255
   703  00B2  07F6               	addwf	_counter+1,f
   704  00B3                     l1079:	
   705                           
   706                           ;main.c: 97:         counter = (counter<0)?0:counter;
   707  00B3  1BF6               	btfsc	_counter+1,7
   708  00B4  28B6               	goto	u741
   709  00B5  28B7               	goto	u740
   710  00B6                     u741:	
   711  00B6  28B8               	goto	l1083
   712  00B7                     u740:	
   713  00B7  28BA               	goto	l1085
   714  00B8                     l1083:	
   715  00B8  01F5               	clrf	_counter
   716  00B9  01F6               	clrf	_counter+1
   717  00BA                     l1085:	
   718                           
   719                           ;main.c: 99:         _delay((unsigned long)((500)*(4000000/4000.0)));
   720  00BA  3003               	movlw	3
   721  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   722  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   723  00BD  00A5               	movwf	??_main+2
   724  00BE  308A               	movlw	138
   725  00BF  00A4               	movwf	??_main+1
   726  00C0  3055               	movlw	85
   727  00C1  00A3               	movwf	??_main
   728  00C2                     u787:	
   729  00C2  0BA3               	decfsz	??_main,f
   730  00C3  28C2               	goto	u787
   731  00C4  0BA4               	decfsz	??_main+1,f
   732  00C5  28C2               	goto	u787
   733  00C6  0BA5               	decfsz	??_main+2,f
   734  00C7  28C2               	goto	u787
   735  00C8  0000               	nop
   736  00C9  2816               	goto	l1031
   737  00CA  280A               	ljmp	start
   738  00CB                     __end_of_main:	
   739                           
   740                           	psect	text1
   741  014C                     __ptext1:	
   742 ;; *************** function _InitApp *****************
   743 ;; Defined at:
   744 ;;		line 25 in file "user.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   758 ;;      Params:         0       0       0       0
   759 ;;      Locals:         0       0       0       0
   760 ;;      Temps:          0       3       0       0
   761 ;;      Totals:         0       3       0       0
   762 ;;Total ram usage:        3 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _InitApp
   774  014C                     _InitApp:	
   775  014C                     l989:	
   776                           ;incstack = 0
   777                           ; Regs used in _InitApp: [wreg+status,2]
   778                           
   779                           
   780                           ;user.c: 28:     CMCON = 0b111;
   781  014C  3007               	movlw	7
   782  014D  1283               	bcf	3,5	;RP0=0, select bank0
   783  014E  1303               	bcf	3,6	;RP1=0, select bank0
   784  014F  009F               	movwf	31	;volatile
   785  0150                     l991:	
   786                           
   787                           ;user.c: 31:     TRISA = 0b00000000;
   788  0150  1683               	bsf	3,5	;RP0=1, select bank1
   789  0151  1303               	bcf	3,6	;RP1=0, select bank1
   790  0152  0185               	clrf	5	;volatile
   791  0153                     l993:	
   792                           
   793                           ;user.c: 32:     TRISB = 0b11110001;
   794  0153  30F1               	movlw	241
   795  0154  0086               	movwf	6	;volatile
   796  0155                     l995:	
   797                           
   798                           ;user.c: 35:     PORTA = 0b11111111;
   799  0155  30FF               	movlw	255
   800  0156  1283               	bcf	3,5	;RP0=0, select bank0
   801  0157  1303               	bcf	3,6	;RP1=0, select bank0
   802  0158  0085               	movwf	5	;volatile
   803  0159                     l997:	
   804                           
   805                           ;user.c: 38:     INTCON = 0b10011000;
   806  0159  3098               	movlw	152
   807  015A  008B               	movwf	11	;volatile
   808  015B                     l999:	
   809                           
   810                           ;user.c: 39:     INTEDG = 0;
   811  015B  1683               	bsf	3,5	;RP0=1, select bank1
   812  015C  1303               	bcf	3,6	;RP1=0, select bank1
   813  015D  1301               	bcf	1,6	;volatile
   814  015E                     l1001:	
   815                           
   816                           ;user.c: 42:     RA2 = 0;
   817  015E  1283               	bcf	3,5	;RP0=0, select bank0
   818  015F  1303               	bcf	3,6	;RP1=0, select bank0
   819  0160  1105               	bcf	5,2	;volatile
   820  0161                     l1003:	
   821                           
   822                           ;user.c: 43:     _delay((unsigned long)((500)*(4000000/4000.0)));
   823  0161  3003               	movlw	3
   824  0162  1283               	bcf	3,5	;RP0=0, select bank0
   825  0163  1303               	bcf	3,6	;RP1=0, select bank0
   826  0164  00A2               	movwf	??_InitApp+2
   827  0165  308A               	movlw	138
   828  0166  00A1               	movwf	??_InitApp+1
   829  0167  3055               	movlw	85
   830  0168  00A0               	movwf	??_InitApp
   831  0169                     u797:	
   832  0169  0BA0               	decfsz	??_InitApp,f
   833  016A  2969               	goto	u797
   834  016B  0BA1               	decfsz	??_InitApp+1,f
   835  016C  2969               	goto	u797
   836  016D  0BA2               	decfsz	??_InitApp+2,f
   837  016E  2969               	goto	u797
   838  016F  0000               	nop
   839  0170                     l1005:	
   840                           
   841                           ;user.c: 44:     RA3 = 0;
   842  0170  1283               	bcf	3,5	;RP0=0, select bank0
   843  0171  1303               	bcf	3,6	;RP1=0, select bank0
   844  0172  1185               	bcf	5,3	;volatile
   845  0173                     l1007:	
   846                           
   847                           ;user.c: 45:     _delay((unsigned long)((500)*(4000000/4000.0)));
   848  0173  3003               	movlw	3
   849  0174  1283               	bcf	3,5	;RP0=0, select bank0
   850  0175  1303               	bcf	3,6	;RP1=0, select bank0
   851  0176  00A2               	movwf	??_InitApp+2
   852  0177  308A               	movlw	138
   853  0178  00A1               	movwf	??_InitApp+1
   854  0179  3055               	movlw	85
   855  017A  00A0               	movwf	??_InitApp
   856  017B                     u807:	
   857  017B  0BA0               	decfsz	??_InitApp,f
   858  017C  297B               	goto	u807
   859  017D  0BA1               	decfsz	??_InitApp+1,f
   860  017E  297B               	goto	u807
   861  017F  0BA2               	decfsz	??_InitApp+2,f
   862  0180  297B               	goto	u807
   863  0181  0000               	nop
   864  0182                     l1009:	
   865                           
   866                           ;user.c: 46:     RA2 = 1;
   867  0182  1283               	bcf	3,5	;RP0=0, select bank0
   868  0183  1303               	bcf	3,6	;RP1=0, select bank0
   869  0184  1505               	bsf	5,2	;volatile
   870  0185                     l1011:	
   871                           
   872                           ;user.c: 47:     RA3 = 1;
   873  0185  1585               	bsf	5,3	;volatile
   874  0186                     l1013:	
   875                           
   876                           ;user.c: 48:     RA4 = 0;
   877  0186  1205               	bcf	5,4	;volatile
   878  0187                     l1015:	
   879                           
   880                           ;user.c: 49:     _delay((unsigned long)((500)*(4000000/4000.0)));
   881  0187  3003               	movlw	3
   882  0188  1283               	bcf	3,5	;RP0=0, select bank0
   883  0189  1303               	bcf	3,6	;RP1=0, select bank0
   884  018A  00A2               	movwf	??_InitApp+2
   885  018B  308A               	movlw	138
   886  018C  00A1               	movwf	??_InitApp+1
   887  018D  3055               	movlw	85
   888  018E  00A0               	movwf	??_InitApp
   889  018F                     u817:	
   890  018F  0BA0               	decfsz	??_InitApp,f
   891  0190  298F               	goto	u817
   892  0191  0BA1               	decfsz	??_InitApp+1,f
   893  0192  298F               	goto	u817
   894  0193  0BA2               	decfsz	??_InitApp+2,f
   895  0194  298F               	goto	u817
   896  0195  0000               	nop
   897  0196                     l1017:	
   898                           
   899                           ;user.c: 50:     RA4 = 1;
   900  0196  1283               	bcf	3,5	;RP0=0, select bank0
   901  0197  1303               	bcf	3,6	;RP1=0, select bank0
   902  0198  1605               	bsf	5,4	;volatile
   903  0199                     l1019:	
   904                           
   905                           ;user.c: 53:     if (RB4==0) {
   906  0199  1A06               	btfsc	6,4	;volatile
   907  019A  299C               	goto	u581
   908  019B  299D               	goto	u580
   909  019C                     u581:	
   910  019C  299F               	goto	l129
   911  019D                     u580:	
   912  019D                     l1021:	
   913                           
   914                           ;user.c: 54:         movement_direction = 0;
   915  019D  01F8               	clrf	_movement_direction
   916                           
   917                           ;user.c: 55:     } else if (RB5==0) {
   918  019E  29A5               	goto	l133
   919  019F                     l129:	
   920  019F  1A86               	btfsc	6,5	;volatile
   921  01A0  29A2               	goto	u591
   922  01A1  29A3               	goto	u590
   923  01A2                     u591:	
   924  01A2  299D               	goto	l1021
   925  01A3                     u590:	
   926  01A3                     l1023:	
   927                           
   928                           ;user.c: 56:         movement_direction = 1;
   929  01A3  01F8               	clrf	_movement_direction
   930  01A4  0AF8               	incf	_movement_direction,f
   931  01A5                     l133:	
   932                           ;user.c: 57:     } else {
   933                           
   934  01A5  0008               	return
   935  01A6                     __end_of_InitApp:	
   936                           
   937                           	psect	text2
   938  01A9                     __ptext2:	
   939 ;; *************** function _ConfigureOscillator *****************
   940 ;; Defined at:
   941 ;;		line 18 in file "system.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		None
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   955 ;;      Params:         0       0       0       0
   956 ;;      Locals:         0       0       0       0
   957 ;;      Temps:          0       0       0       0
   958 ;;      Totals:         0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _ConfigureOscillator
   971  01A9                     _ConfigureOscillator:	
   972  01A9                     l100:	
   973                           ;incstack = 0
   974                           ; Regs used in _ConfigureOscillator: []
   975                           
   976  01A9  0008               	return
   977  01AA                     __end_of_ConfigureOscillator:	
   978                           
   979                           	psect	text3
   980  00CB                     __ptext3:	
   981 ;; *************** function _my_isr_routine *****************
   982 ;; Defined at:
   983 ;;		line 30 in file "interrupts.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   997 ;;      Params:         0       0       0       0
   998 ;;      Locals:         0       0       0       0
   999 ;;      Temps:          5       0       0       0
  1000 ;;      Totals:         5       0       0       0
  1001 ;;Total ram usage:        5 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		Interrupt level 1
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _my_isr_routine
  1012  00CB                     _my_isr_routine:	
  1013  00CB                     i1l885:	
  1014                           
  1015                           ;interrupts.c: 37:     if(INTF){
  1016  00CB  1C8B               	btfss	11,1	;volatile
  1017  00CC  28CE               	goto	u28_21
  1018  00CD  28CF               	goto	u28_20
  1019  00CE                     u28_21:	
  1020  00CE  28FF               	goto	i1l27
  1021  00CF                     u28_20:	
  1022  00CF                     i1l887:	
  1023                           
  1024                           ;interrupts.c: 39:         overtorgue_flag = 1;
  1025  00CF  01F7               	clrf	_overtorgue_flag
  1026  00D0  0AF7               	incf	_overtorgue_flag,f
  1027                           
  1028                           ;interrupts.c: 40:         if (RB4==0 && RB5==0 ) {
  1029  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00D3  1A06               	btfsc	6,4	;volatile
  1032  00D4  28D6               	goto	u29_21
  1033  00D5  28D7               	goto	u29_20
  1034  00D6                     u29_21:	
  1035  00D6  28DE               	goto	i1l28
  1036  00D7                     u29_20:	
  1037  00D7                     i1l889:	
  1038  00D7  1A86               	btfsc	6,5	;volatile
  1039  00D8  28DA               	goto	u30_21
  1040  00D9  28DB               	goto	u30_20
  1041  00DA                     u30_21:	
  1042  00DA  28DE               	goto	i1l28
  1043  00DB                     u30_20:	
  1044  00DB                     i1l891:	
  1045                           
  1046                           ;interrupts.c: 41:             RA0 = 1;
  1047  00DB  1405               	bsf	5,0	;volatile
  1048                           
  1049                           ;interrupts.c: 42:             RA1 = 1;
  1050  00DC  1485               	bsf	5,1	;volatile
  1051                           
  1052                           ;interrupts.c: 43:         } else if (RA0==0 || RA1==0 ) {
  1053  00DD  28FD               	goto	i1l29
  1054  00DE                     i1l28:	
  1055  00DE  1C05               	btfss	5,0	;volatile
  1056  00DF  28E1               	goto	u31_21
  1057  00E0  28E2               	goto	u31_20
  1058  00E1                     u31_21:	
  1059  00E1  28E6               	goto	i1l32
  1060  00E2                     u31_20:	
  1061  00E2                     i1l893:	
  1062  00E2  1885               	btfsc	5,1	;volatile
  1063  00E3  28E5               	goto	u32_21
  1064  00E4  28E6               	goto	u32_20
  1065  00E5                     u32_21:	
  1066  00E5  28F3               	goto	i1l897
  1067  00E6                     u32_20:	
  1068  00E6                     i1l32:	
  1069                           
  1070                           ;interrupts.c: 44:             RA0 = 1;
  1071  00E6  1405               	bsf	5,0	;volatile
  1072                           
  1073                           ;interrupts.c: 45:             RA1 = 1;
  1074  00E7  1485               	bsf	5,1	;volatile
  1075  00E8                     i1l895:	
  1076                           
  1077                           ;interrupts.c: 46:             movement_direction = (movement_direction==0)?1:0;
  1078  00E8  0878               	movf	_movement_direction,w
  1079  00E9  1903               	btfsc	3,2
  1080  00EA  28EC               	goto	u33_21
  1081  00EB  28EE               	goto	u33_20
  1082  00EC                     u33_21:	
  1083  00EC  3001               	movlw	1
  1084  00ED  28EF               	goto	u34_20
  1085  00EE                     u33_20:	
  1086  00EE  3000               	movlw	0
  1087  00EF                     u34_20:	
  1088  00EF  00F0               	movwf	??_my_isr_routine
  1089  00F0  0870               	movf	??_my_isr_routine,w
  1090  00F1  00F8               	movwf	_movement_direction
  1091                           
  1092                           ;interrupts.c: 47:         } else {
  1093  00F2  28FD               	goto	i1l29
  1094  00F3                     i1l897:	
  1095                           
  1096                           ;interrupts.c: 48:             if(movement_direction==1) {
  1097  00F3  0378               	decf	_movement_direction,w
  1098  00F4  1D03               	btfss	3,2
  1099  00F5  28F7               	goto	u35_21
  1100  00F6  28F8               	goto	u35_20
  1101  00F7                     u35_21:	
  1102  00F7  28FB               	goto	i1l34
  1103  00F8                     u35_20:	
  1104  00F8                     i1l899:	
  1105                           
  1106                           ;interrupts.c: 49:                 RA1 = 1;
  1107  00F8  1485               	bsf	5,1	;volatile
  1108                           
  1109                           ;interrupts.c: 50:                 RA0 = 0;
  1110  00F9  1005               	bcf	5,0	;volatile
  1111                           
  1112                           ;interrupts.c: 51:             } else {
  1113  00FA  28FD               	goto	i1l29
  1114  00FB                     i1l34:	
  1115                           
  1116                           ;interrupts.c: 52:                 RA1 = 0;
  1117  00FB  1085               	bcf	5,1	;volatile
  1118                           
  1119                           ;interrupts.c: 53:                 RA0 = 1;
  1120  00FC  1405               	bsf	5,0	;volatile
  1121  00FD                     i1l29:	
  1122                           
  1123                           ;interrupts.c: 56:         INTF=0;
  1124  00FD  108B               	bcf	11,1	;volatile
  1125                           
  1126                           ;interrupts.c: 57:     } else if (RBIF){
  1127  00FE  2945               	goto	i1l47
  1128  00FF                     i1l27:	
  1129  00FF  1C0B               	btfss	11,0	;volatile
  1130  0100  2902               	goto	u36_21
  1131  0101  2903               	goto	u36_20
  1132  0102                     u36_21:	
  1133  0102  2945               	goto	i1l47
  1134  0103                     u36_20:	
  1135  0103                     i1l901:	
  1136                           
  1137                           ;interrupts.c: 59:         if (RB6==0) {
  1138  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0105  1B06               	btfsc	6,6	;volatile
  1141  0106  2908               	goto	u37_21
  1142  0107  2909               	goto	u37_20
  1143  0108                     u37_21:	
  1144  0108  2927               	goto	i1l38
  1145  0109                     u37_20:	
  1146  0109                     i1l903:	
  1147                           
  1148                           ;interrupts.c: 61:             if (movement_direction==1) {
  1149  0109  0378               	decf	_movement_direction,w
  1150  010A  1D03               	btfss	3,2
  1151  010B  290D               	goto	u38_21
  1152  010C  290E               	goto	u38_20
  1153  010D                     u38_21:	
  1154  010D  2923               	goto	i1l39
  1155  010E                     u38_20:	
  1156  010E                     i1l905:	
  1157                           
  1158                           ;interrupts.c: 62:                 RA0 = 1;
  1159  010E  1405               	bsf	5,0	;volatile
  1160                           
  1161                           ;interrupts.c: 63:                 RA1 = 0;
  1162  010F  1085               	bcf	5,1	;volatile
  1163  0110                     i1l907:	
  1164                           
  1165                           ;interrupts.c: 64:                 _delay((unsigned long)((1500)*(4000000/4000.0)));
  1166  0110  3008               	movlw	8
  1167  0111  00F2               	movwf	??_my_isr_routine+2
  1168  0112  309D               	movlw	157
  1169  0113  00F1               	movwf	??_my_isr_routine+1
  1170  0114  3005               	movlw	5
  1171  0115  00F0               	movwf	??_my_isr_routine
  1172  0116                     u82_27:	
  1173  0116  0BF0               	decfsz	??_my_isr_routine,f
  1174  0117  2916               	goto	u82_27
  1175  0118  0BF1               	decfsz	??_my_isr_routine+1,f
  1176  0119  2916               	goto	u82_27
  1177  011A  0BF2               	decfsz	??_my_isr_routine+2,f
  1178  011B  2916               	goto	u82_27
  1179  011C  291D               	nop2
  1180  011D                     i1l909:	
  1181                           
  1182                           ;interrupts.c: 65:                 RA1 = 1;
  1183  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1184  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1185  011F  1485               	bsf	5,1	;volatile
  1186  0120                     i1l911:	
  1187                           
  1188                           ;interrupts.c: 66:                 overtorgue_flag=0;
  1189  0120  01F7               	clrf	_overtorgue_flag
  1190  0121                     i1l913:	
  1191                           
  1192                           ;interrupts.c: 67:                 movement_direction = 0;
  1193  0121  01F8               	clrf	_movement_direction
  1194                           
  1195                           ;interrupts.c: 68:             } else {
  1196  0122  2944               	goto	i1l41
  1197  0123                     i1l39:	
  1198                           
  1199                           ;interrupts.c: 69:                 RA1 = 1;
  1200  0123  1485               	bsf	5,1	;volatile
  1201  0124                     i1l915:	
  1202                           
  1203                           ;interrupts.c: 70:                 overtorgue_flag=0;
  1204  0124  01F7               	clrf	_overtorgue_flag
  1205                           
  1206                           ;interrupts.c: 71:                 movement_direction = 0;
  1207  0125  01F8               	clrf	_movement_direction
  1208  0126  2944               	goto	i1l41
  1209  0127                     i1l38:	
  1210  0127  1A06               	btfsc	6,4	;volatile
  1211  0128  292A               	goto	u39_21
  1212  0129  292B               	goto	u39_20
  1213  012A                     u39_21:	
  1214  012A  2932               	goto	i1l42
  1215  012B                     u39_20:	
  1216  012B                     i1l917:	
  1217  012B  1A86               	btfsc	6,5	;volatile
  1218  012C  292E               	goto	u40_21
  1219  012D  292F               	goto	u40_20
  1220  012E                     u40_21:	
  1221  012E  2932               	goto	i1l42
  1222  012F                     u40_20:	
  1223  012F                     i1l919:	
  1224                           
  1225                           ;interrupts.c: 76:             RA0 = 1;
  1226  012F  1405               	bsf	5,0	;volatile
  1227                           
  1228                           ;interrupts.c: 77:             RA1 = 1;
  1229  0130  1485               	bsf	5,1	;volatile
  1230                           
  1231                           ;interrupts.c: 78:         } else if (RB4==0) {
  1232  0131  2944               	goto	i1l41
  1233  0132                     i1l42:	
  1234  0132  1A06               	btfsc	6,4	;volatile
  1235  0133  2935               	goto	u41_21
  1236  0134  2936               	goto	u41_20
  1237  0135                     u41_21:	
  1238  0135  293D               	goto	i1l44
  1239  0136                     u41_20:	
  1240  0136                     i1l921:	
  1241                           
  1242                           ;interrupts.c: 80:             RA0 = 1;
  1243  0136  1405               	bsf	5,0	;volatile
  1244  0137                     i1l923:	
  1245                           
  1246                           ;interrupts.c: 81:             movement_direction = 0;
  1247  0137  01F8               	clrf	_movement_direction
  1248  0138                     i1l925:	
  1249                           
  1250                           ;interrupts.c: 82:             counter=20;
  1251  0138  3014               	movlw	20
  1252  0139  00F5               	movwf	_counter
  1253  013A  3000               	movlw	0
  1254  013B  00F6               	movwf	_counter+1
  1255                           
  1256                           ;interrupts.c: 84:         } else if (RB5==0) {
  1257  013C  2944               	goto	i1l41
  1258  013D                     i1l44:	
  1259  013D  1A86               	btfsc	6,5	;volatile
  1260  013E  2940               	goto	u42_21
  1261  013F  2941               	goto	u42_20
  1262  0140                     u42_21:	
  1263  0140  2944               	goto	i1l41
  1264  0141                     u42_20:	
  1265  0141                     i1l927:	
  1266                           
  1267                           ;interrupts.c: 86:             RA1 = 1;
  1268  0141  1485               	bsf	5,1	;volatile
  1269                           
  1270                           ;interrupts.c: 87:             movement_direction = 1;
  1271  0142  01F8               	clrf	_movement_direction
  1272  0143  0AF8               	incf	_movement_direction,f
  1273  0144                     i1l41:	
  1274                           
  1275                           ;interrupts.c: 89:         RBIF=0;
  1276  0144  100B               	bcf	11,0	;volatile
  1277  0145                     i1l47:	
  1278  0145  0874               	movf	??_my_isr_routine+4,w
  1279  0146  008A               	movwf	10
  1280  0147  0E73               	swapf	(??_my_isr_routine+3)^(0+4294967168),w
  1281  0148  0083               	movwf	3
  1282  0149  0EFE               	swapf	btemp,f
  1283  014A  0E7E               	swapf	btemp,w
  1284  014B  0009               	retfie
  1285  014C                     __end_of_my_isr_routine:	
  1286  007E                     btemp	set	126	;btemp
  1287  007E                     wtemp0	set	126
  1288                           
  1289                           	psect	intentry
  1290  0004                     __pintentry:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _my_isr_routine: [wreg+status,2+status,0]
  1293                           
  1294  0004                     interrupt_function:	
  1295  007E                     saved_w	set	btemp
  1296  0004  00FE               	movwf	btemp
  1297  0005  0E03               	swapf	3,w
  1298  0006  00F3               	movwf	??_my_isr_routine+3
  1299  0007  080A               	movf	10,w
  1300  0008  00F4               	movwf	??_my_isr_routine+4
  1301  0009  28CB               	ljmp	_my_isr_routine


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitApp

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_isr_routine                                       5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      10        0.0%
ABS                  0      0       F       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 23 07:47:49 2020

                 __CFG_CP$OFF 0000                            l81 007E                            l85 008A  
                          l77 0022                            l87 009A                            l79 0063  
                          l89 00AA                           l100 01A9                           l133 01A5  
                         l129 019F                           l991 0150                           l993 0153  
                         l995 0155                           l997 0159                           l989 014C  
                         l999 015B                           _RA0 0028                           _RA1 0029  
                         _RA2 002A                           _RA3 002B                           _RA4 002C  
                         _RB4 0034                           _RB5 0035                           _RB6 0036  
                         _RB7 0037                           u600 001B                           u601 001A  
                         u610 0028                  __CFG_CPD$OFF 0000                           u611 0027  
                         u700 0096                           u620 002C                           u701 0095  
                         u621 002B                           u710 009E                           u630 0067  
                         u711 009D                           u631 0066                           u720 00A2  
                         u640 006B                           u721 00A1                           u641 006A  
                         u730 00A6                           u650 007A                           u731 00A5  
                         u651 0079                           u580 019D                           u740 00B7  
                         u660 0082                           u581 019C                           u741 00B6  
                         u661 0081                           u590 01A3                           u670 0086  
                         u591 01A2                           u807 017B                           u671 0085  
                         u655 0076                           u680 008E                           u817 018F  
                         u681 008D                           u690 0092                           u691 0091  
                         u757 0037                           u767 0048                           u777 0059  
                         u787 00C2                           u797 0169               _overtorgue_flag 0077  
                __CFG_LVP$OFF 0000                          l1001 015E                          l1011 0185  
                        l1003 0161                          l1021 019D                          l1013 0186  
                        l1005 0170                          l1023 01A3                          l1015 0187  
                        l1007 0173                          l1031 0016                          l1017 0196  
                        l1009 0182                          l1041 002F                          l1033 001B  
                        l1019 0199                          l1051 006B                          l1043 003D  
                        l1035 001F                          l1027 0014                          l1061 008E  
                        l1053 006D                          l1045 004E                          l1037 0028  
                        l1029 0015                          l1071 009E                          l1063 0092  
                        l1055 007A                          l1047 005F                          l1039 002C  
                        l1073 00A2                          l1065 0096                          l1057 0082  
                        l1049 0067                          l1083 00B8                          l1075 00A6  
                        l1067 0097                          l1059 0086                          l1085 00BA  
                        l1077 00AD                          l1079 00B3                          _INTF 0059  
                        i1l32 00E6                          _RBIF 0058                          i1l41 0144  
                        i1l42 0132                          i1l34 00FB                          i1l27 00FF  
                        i1l44 013D                          i1l28 00DE                          i1l29 00FD  
                        i1l38 0127                          i1l39 0123                          i1l47 0145  
                        _main 0014                          btemp 007E                          start 000A  
             __end_of_InitApp 01A6                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _CMCON 001F                         i1l901 0103                         i1l911 0120  
                       i1l903 0109                         i1l921 0136                         i1l913 0121  
                       i1l905 010E                         i1l923 0137                         i1l915 0124  
                       i1l907 0110                         i1l925 0138                         i1l917 012B  
                       i1l909 011D                         i1l927 0141                         i1l919 012F  
                       i1l891 00DB                         i1l893 00E2                         i1l885 00CB  
                       i1l895 00E8                         i1l887 00CF                         i1l897 00F3  
                       i1l889 00D7                         i1l899 00F8                         u30_20 00DB  
                       u30_21 00DA                         u31_20 00E2                         u31_21 00E1  
                       u40_20 012F                         u32_20 00E6                         u40_21 012E  
                       u32_21 00E5                         u41_20 0136                         u33_20 00EE  
                       u41_21 0135                         u33_21 00EC                         u42_20 0141  
                       u34_20 00EF                         u42_21 0140                         u35_20 00F8  
                       u35_21 00F7                         _PORTA 0005                         u36_20 0103  
                       u28_20 00CF                         u36_21 0102                         u28_21 00CE  
                       u37_20 0109                         u29_20 00D7                         u37_21 0108  
                       u29_21 00D6                         u38_20 010E                         u38_21 010D  
                       u39_20 012B                         u39_21 012A                         _TRISA 0085  
                       _TRISB 0086                         u82_27 0116           _ConfigureOscillator 01A9  
              __CFG_BOREN$OFF 0000                         pclath 000A                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0070                __CFG_MCLRE$OFF 0000  
             __initialization 000B                  __end_of_main 00CB                        ??_main 0023  
                      _INTEDG 040E                        _INTCON 000B                     ??_InitApp 0020  
       ??_ConfigureOscillator 0075                __CFG_PWRTE$OFF 0000                  __pdataCOMMON 0075  
                      saved_w 007E       __end_of__initialization 0012                __pcstackCOMMON 0070  
                  __pmaintext 0014                    __pintentry 0004            _movement_direction 0078  
     __size_of_my_isr_routine 0081                       _InitApp 014C                       __ptext1 014C  
                     __ptext2 01A9                       __ptext3 00CB                       _counter 0075  
        end_of_initialization 0012   __end_of_ConfigureOscillator 01AA                 __pidataCOMMON 01A6  
         start_initialization 000B                _my_isr_routine 00CB                   __pbssCOMMON 0078  
                   ___latbits 0000                 __pcstackBANK0 0020        __end_of_my_isr_routine 014C  
                    ?_InitApp 0070               ?_my_isr_routine 0070             interrupt_function 0004  
            __size_of_InitApp 005A                 __size_of_main 00B7  __size_of_ConfigureOscillator 0001  
                    intlevel1 0000              ??_my_isr_routine 0070            __CFG_FOSC$INTOSCIO 0000  
