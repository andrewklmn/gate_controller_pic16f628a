

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 22 18:51:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  0092                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  008C                     	;# 
   153  008E                     	;# 
   154  0092                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009F                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  008C                     	;# 
   190  008E                     	;# 
   191  0092                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0092                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009F                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  008C                     	;# 
   264  008E                     	;# 
   265  0092                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009F                     	;# 
   273                           
   274                           	psect	idataCOMMON
   275  013C                     __pidataCOMMON:	
   276                           
   277                           ;initializer for _overtorgue_flag
   278  013C  3401               	retlw	1
   279  000B                     _INTCON	set	11
   280  0005                     _PORTA	set	5
   281  001F                     _CMCON	set	31
   282  0037                     _RB7	set	55
   283  002A                     _RA2	set	42
   284  002B                     _RA3	set	43
   285  002C                     _RA4	set	44
   286  0036                     _RB6	set	54
   287  0058                     _RBIF	set	88
   288  0029                     _RA1	set	41
   289  0028                     _RA0	set	40
   290  0035                     _RB5	set	53
   291  0034                     _RB4	set	52
   292  0059                     _INTF	set	89
   293  0086                     _TRISB	set	134
   294  0085                     _TRISA	set	133
   295  040E                     _INTEDG	set	1038
   296                           
   297                           ; #config settings
   298  0000                     
   299                           	psect	cinit
   300  000B                     start_initialization:	
   301  000B                     __initialization:	
   302                           
   303                           ; Initialize objects allocated to COMMON
   304  000B  213C               	fcall	__pidataCOMMON	;fetch initializer
   305  000C  00F6               	movwf	__pdataCOMMON& (0+127)
   306                           
   307                           ; Clear objects allocated to COMMON
   308  000D  01F5               	clrf	__pbssCOMMON& (0+127)
   309  000E                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  000E                     __end_of__initialization:	
   313  000E  0183               	clrf	3
   314  000F  28E7               	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317  0075                     __pbssCOMMON:	
   318  0075                     _movement_direction:	
   319  0075                     	ds	1
   320                           
   321                           	psect	dataCOMMON
   322  0076                     __pdataCOMMON:	
   323  0076                     _overtorgue_flag:	
   324  0076                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:	
   328  0070                     ?_ConfigureOscillator:	
   329  0070                     ?_InitApp:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_my_isr_routine:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_my_isr_routine:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	5
   344  0075                     ??_ConfigureOscillator:	
   345                           
   346                           	psect	cstackBANK0
   347  0020                     __pcstackBANK0:	
   348                           ; 1 bytes @ 0x5
   349                           
   350  0020                     ??_InitApp:	
   351                           
   352                           ; 1 bytes @ 0x0
   353  0020                     	ds	3
   354  0023                     ??_main:	
   355                           
   356                           ; 1 bytes @ 0x3
   357  0023                     	ds	3
   358                           
   359                           	psect	maintext
   360  00E7                     __pmaintext:	
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 29 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   380 ;;      Params:         0       0       0       0
   381 ;;      Locals:         0       0       0       0
   382 ;;      Temps:          0       3       0       0
   383 ;;      Totals:         0       3       0       0
   384 ;;Total ram usage:        3 bytes
   385 ;; Hardware stack levels required when called:    2
   386 ;; This function calls:
   387 ;;		_ConfigureOscillator
   388 ;;		_InitApp
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _main
   396  00E7                     _main:	
   397  00E7                     l967:	
   398                           ;incstack = 0
   399                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   400                           
   401                           
   402                           ;main.c: 32:     ConfigureOscillator();
   403  00E7  213D               	fcall	_ConfigureOscillator
   404  00E8                     l969:	
   405                           
   406                           ;main.c: 35:     InitApp();
   407  00E8  208D               	fcall	_InitApp
   408  00E9                     l971:	
   409                           
   410                           ;main.c: 39:     {;main.c: 40:         if (overtorgue_flag==0 || (RB4==0 && RB5==0)) {
   411  00E9  0876               	movf	_overtorgue_flag,w
   412  00EA  1903               	btfsc	3,2
   413  00EB  28ED               	goto	u521
   414  00EC  28EE               	goto	u520
   415  00ED                     u521:	
   416  00ED  28F8               	goto	l75
   417  00EE                     u520:	
   418  00EE                     l973:	
   419  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   420  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   421  00F0  1A06               	btfsc	6,4	;volatile
   422  00F1  28F3               	goto	u531
   423  00F2  28F4               	goto	u530
   424  00F3                     u531:	
   425  00F3  28FF               	goto	l73
   426  00F4                     u530:	
   427  00F4                     l975:	
   428  00F4  1A86               	btfsc	6,5	;volatile
   429  00F5  28F7               	goto	u541
   430  00F6  28F8               	goto	u540
   431  00F7                     u541:	
   432  00F7  28FF               	goto	l73
   433  00F8                     u540:	
   434  00F8                     l75:	
   435                           
   436                           ;main.c: 41:             RA4 = 1;
   437  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   438  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   439  00FA  1605               	bsf	5,4	;volatile
   440                           
   441                           ;main.c: 42:             RA3= 1;
   442  00FB  1585               	bsf	5,3	;volatile
   443  00FC                     l977:	
   444                           
   445                           ;main.c: 43:             RA2 = !RA2;
   446  00FC  3004               	movlw	4
   447  00FD  0685               	xorwf	5,f
   448                           
   449                           ;main.c: 45:         } else if(RB4==0 && RB5==1) {
   450  00FE  292B               	goto	l997
   451  00FF                     l73:	
   452  00FF  1A06               	btfsc	6,4	;volatile
   453  0100  2902               	goto	u551
   454  0101  2903               	goto	u550
   455  0102                     u551:	
   456  0102  290B               	goto	l77
   457  0103                     u550:	
   458  0103                     l979:	
   459  0103  1E86               	btfss	6,5	;volatile
   460  0104  2906               	goto	u561
   461  0105  2907               	goto	u560
   462  0106                     u561:	
   463  0106  290B               	goto	l77
   464  0107                     u560:	
   465  0107                     l981:	
   466                           
   467                           ;main.c: 47:             RA4 = 1;
   468  0107  1605               	bsf	5,4	;volatile
   469                           
   470                           ;main.c: 48:             RA3 = 1;
   471  0108  1585               	bsf	5,3	;volatile
   472                           
   473                           ;main.c: 49:             RA2 = 0;
   474  0109  1105               	bcf	5,2	;volatile
   475                           
   476                           ;main.c: 51:         } else if(RB4==1 && RB5==0) {
   477  010A  292B               	goto	l997
   478  010B                     l77:	
   479  010B  1E06               	btfss	6,4	;volatile
   480  010C  290E               	goto	u571
   481  010D  290F               	goto	u570
   482  010E                     u571:	
   483  010E  2917               	goto	l79
   484  010F                     u570:	
   485  010F                     l983:	
   486  010F  1A86               	btfsc	6,5	;volatile
   487  0110  2912               	goto	u581
   488  0111  2913               	goto	u580
   489  0112                     u581:	
   490  0112  2917               	goto	l79
   491  0113                     u580:	
   492  0113                     l985:	
   493                           
   494                           ;main.c: 53:             RA4=0;
   495  0113  1205               	bcf	5,4	;volatile
   496                           
   497                           ;main.c: 54:             RA3=1;
   498  0114  1585               	bsf	5,3	;volatile
   499                           
   500                           ;main.c: 55:             RA2=1;
   501  0115  1505               	bsf	5,2	;volatile
   502                           
   503                           ;main.c: 57:         } else if(RB4==1
   504  0116  292B               	goto	l997
   505  0117                     l79:	
   506  0117  1E06               	btfss	6,4	;volatile
   507  0118  291A               	goto	u591
   508  0119  291B               	goto	u590
   509  011A                     u591:	
   510  011A  2928               	goto	l81
   511  011B                     u590:	
   512  011B                     l987:	
   513  011B  1E86               	btfss	6,5	;volatile
   514  011C  291E               	goto	u601
   515  011D  291F               	goto	u600
   516  011E                     u601:	
   517  011E  2928               	goto	l81
   518  011F                     u600:	
   519  011F                     l989:	
   520  011F  1B86               	btfsc	6,7	;volatile
   521  0120  2922               	goto	u611
   522  0121  2923               	goto	u610
   523  0122                     u611:	
   524  0122  2928               	goto	l81
   525  0123                     u610:	
   526  0123                     l991:	
   527                           
   528                           ;main.c: 59:                     && RB7==0) {;main.c: 61:             RA4 = 1;
   529  0123  1605               	bsf	5,4	;volatile
   530  0124                     l993:	
   531                           
   532                           ;main.c: 62:             RA3=!RA3;
   533  0124  3008               	movlw	8
   534  0125  0685               	xorwf	5,f
   535  0126                     l995:	
   536                           
   537                           ;main.c: 63:             RA2 = 1;
   538  0126  1505               	bsf	5,2	;volatile
   539                           
   540                           ;main.c: 65:         } else {
   541  0127  292B               	goto	l997
   542  0128                     l81:	
   543                           
   544                           ;main.c: 66:             RA4 = 1;
   545  0128  1605               	bsf	5,4	;volatile
   546                           
   547                           ;main.c: 67:             RA3= 1;
   548  0129  1585               	bsf	5,3	;volatile
   549                           
   550                           ;main.c: 68:             RA2 = 1;
   551  012A  1505               	bsf	5,2	;volatile
   552  012B                     l997:	
   553                           
   554                           ;main.c: 70:         _delay((unsigned long)((500)*(4000000/4000.0)));
   555  012B  3003               	movlw	3
   556  012C  1283               	bcf	3,5	;RP0=0, select bank0
   557  012D  1303               	bcf	3,6	;RP1=0, select bank0
   558  012E  00A5               	movwf	??_main+2
   559  012F  308A               	movlw	138
   560  0130  00A4               	movwf	??_main+1
   561  0131  3055               	movlw	85
   562  0132  00A3               	movwf	??_main
   563  0133                     u627:	
   564  0133  0BA3               	decfsz	??_main,f
   565  0134  2933               	goto	u627
   566  0135  0BA4               	decfsz	??_main+1,f
   567  0136  2933               	goto	u627
   568  0137  0BA5               	decfsz	??_main+2,f
   569  0138  2933               	goto	u627
   570  0139  0000               	nop
   571  013A  28E9               	goto	l971
   572  013B  280A               	ljmp	start
   573  013C                     __end_of_main:	
   574                           
   575                           	psect	text1
   576  008D                     __ptext1:	
   577 ;; *************** function _InitApp *****************
   578 ;; Defined at:
   579 ;;		line 25 in file "user.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   593 ;;      Params:         0       0       0       0
   594 ;;      Locals:         0       0       0       0
   595 ;;      Temps:          0       3       0       0
   596 ;;      Totals:         0       3       0       0
   597 ;;Total ram usage:        3 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _InitApp
   609  008D                     _InitApp:	
   610  008D                     l929:	
   611                           ;incstack = 0
   612                           ; Regs used in _InitApp: [wreg+status,2]
   613                           
   614                           
   615                           ;user.c: 28:     CMCON = 0b111;
   616  008D  3007               	movlw	7
   617  008E  1283               	bcf	3,5	;RP0=0, select bank0
   618  008F  1303               	bcf	3,6	;RP1=0, select bank0
   619  0090  009F               	movwf	31	;volatile
   620  0091                     l931:	
   621                           
   622                           ;user.c: 31:     TRISA = 0b00000000;
   623  0091  1683               	bsf	3,5	;RP0=1, select bank1
   624  0092  1303               	bcf	3,6	;RP1=0, select bank1
   625  0093  0185               	clrf	5	;volatile
   626  0094                     l933:	
   627                           
   628                           ;user.c: 32:     TRISB = 0b11110001;
   629  0094  30F1               	movlw	241
   630  0095  0086               	movwf	6	;volatile
   631  0096                     l935:	
   632                           
   633                           ;user.c: 35:     PORTA = 0b11111111;
   634  0096  30FF               	movlw	255
   635  0097  1283               	bcf	3,5	;RP0=0, select bank0
   636  0098  1303               	bcf	3,6	;RP1=0, select bank0
   637  0099  0085               	movwf	5	;volatile
   638  009A                     l937:	
   639                           
   640                           ;user.c: 38:     INTCON = 0b10011000;
   641  009A  3098               	movlw	152
   642  009B  008B               	movwf	11	;volatile
   643  009C                     l939:	
   644                           
   645                           ;user.c: 39:     INTEDG = 0;
   646  009C  1683               	bsf	3,5	;RP0=1, select bank1
   647  009D  1303               	bcf	3,6	;RP1=0, select bank1
   648  009E  1301               	bcf	1,6	;volatile
   649  009F                     l941:	
   650                           
   651                           ;user.c: 42:     RA2 = 0;
   652  009F  1283               	bcf	3,5	;RP0=0, select bank0
   653  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   654  00A1  1105               	bcf	5,2	;volatile
   655  00A2                     l943:	
   656                           
   657                           ;user.c: 43:     _delay((unsigned long)((500)*(4000000/4000.0)));
   658  00A2  3003               	movlw	3
   659  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   660  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   661  00A5  00A2               	movwf	??_InitApp+2
   662  00A6  308A               	movlw	138
   663  00A7  00A1               	movwf	??_InitApp+1
   664  00A8  3055               	movlw	85
   665  00A9  00A0               	movwf	??_InitApp
   666  00AA                     u637:	
   667  00AA  0BA0               	decfsz	??_InitApp,f
   668  00AB  28AA               	goto	u637
   669  00AC  0BA1               	decfsz	??_InitApp+1,f
   670  00AD  28AA               	goto	u637
   671  00AE  0BA2               	decfsz	??_InitApp+2,f
   672  00AF  28AA               	goto	u637
   673  00B0  0000               	nop
   674  00B1                     l945:	
   675                           
   676                           ;user.c: 44:     RA3 = 0;
   677  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   678  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   679  00B3  1185               	bcf	5,3	;volatile
   680  00B4                     l947:	
   681                           
   682                           ;user.c: 45:     _delay((unsigned long)((500)*(4000000/4000.0)));
   683  00B4  3003               	movlw	3
   684  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   685  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   686  00B7  00A2               	movwf	??_InitApp+2
   687  00B8  308A               	movlw	138
   688  00B9  00A1               	movwf	??_InitApp+1
   689  00BA  3055               	movlw	85
   690  00BB  00A0               	movwf	??_InitApp
   691  00BC                     u647:	
   692  00BC  0BA0               	decfsz	??_InitApp,f
   693  00BD  28BC               	goto	u647
   694  00BE  0BA1               	decfsz	??_InitApp+1,f
   695  00BF  28BC               	goto	u647
   696  00C0  0BA2               	decfsz	??_InitApp+2,f
   697  00C1  28BC               	goto	u647
   698  00C2  0000               	nop
   699  00C3                     l949:	
   700                           
   701                           ;user.c: 46:     RA2 = 1;
   702  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   703  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   704  00C5  1505               	bsf	5,2	;volatile
   705  00C6                     l951:	
   706                           
   707                           ;user.c: 47:     RA3 = 1;
   708  00C6  1585               	bsf	5,3	;volatile
   709  00C7                     l953:	
   710                           
   711                           ;user.c: 48:     RA4 = 0;
   712  00C7  1205               	bcf	5,4	;volatile
   713  00C8                     l955:	
   714                           
   715                           ;user.c: 49:     _delay((unsigned long)((500)*(4000000/4000.0)));
   716  00C8  3003               	movlw	3
   717  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   718  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   719  00CB  00A2               	movwf	??_InitApp+2
   720  00CC  308A               	movlw	138
   721  00CD  00A1               	movwf	??_InitApp+1
   722  00CE  3055               	movlw	85
   723  00CF  00A0               	movwf	??_InitApp
   724  00D0                     u657:	
   725  00D0  0BA0               	decfsz	??_InitApp,f
   726  00D1  28D0               	goto	u657
   727  00D2  0BA1               	decfsz	??_InitApp+1,f
   728  00D3  28D0               	goto	u657
   729  00D4  0BA2               	decfsz	??_InitApp+2,f
   730  00D5  28D0               	goto	u657
   731  00D6  0000               	nop
   732  00D7                     l957:	
   733                           
   734                           ;user.c: 50:     RA4 = 1;
   735  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   736  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   737  00D9  1605               	bsf	5,4	;volatile
   738  00DA                     l959:	
   739                           
   740                           ;user.c: 52:     if (RB4==0) {
   741  00DA  1A06               	btfsc	6,4	;volatile
   742  00DB  28DD               	goto	u501
   743  00DC  28DE               	goto	u500
   744  00DD                     u501:	
   745  00DD  28E0               	goto	l117
   746  00DE                     u500:	
   747  00DE                     l961:	
   748                           
   749                           ;user.c: 53:         movement_direction = 0;
   750  00DE  01F5               	clrf	_movement_direction
   751                           
   752                           ;user.c: 54:     } else if (RB5==0) {
   753  00DF  28E6               	goto	l121
   754  00E0                     l117:	
   755  00E0  1A86               	btfsc	6,5	;volatile
   756  00E1  28E3               	goto	u511
   757  00E2  28E4               	goto	u510
   758  00E3                     u511:	
   759  00E3  28DE               	goto	l961
   760  00E4                     u510:	
   761  00E4                     l963:	
   762                           
   763                           ;user.c: 55:         movement_direction = 1;
   764  00E4  01F5               	clrf	_movement_direction
   765  00E5  0AF5               	incf	_movement_direction,f
   766  00E6                     l121:	
   767                           ;user.c: 56:     } else {
   768                           
   769  00E6  0008               	return
   770  00E7                     __end_of_InitApp:	
   771                           
   772                           	psect	text2
   773  013D                     __ptext2:	
   774 ;; *************** function _ConfigureOscillator *****************
   775 ;; Defined at:
   776 ;;		line 18 in file "system.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		None
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   790 ;;      Params:         0       0       0       0
   791 ;;      Locals:         0       0       0       0
   792 ;;      Temps:          0       0       0       0
   793 ;;      Totals:         0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _ConfigureOscillator
   806  013D                     _ConfigureOscillator:	
   807  013D                     l88:	
   808                           ;incstack = 0
   809                           ; Regs used in _ConfigureOscillator: []
   810                           
   811  013D  0008               	return
   812  013E                     __end_of_ConfigureOscillator:	
   813                           
   814                           	psect	text3
   815  0010                     __ptext3:	
   816 ;; *************** function _my_isr_routine *****************
   817 ;; Defined at:
   818 ;;		line 29 in file "interrupts.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   832 ;;      Params:         0       0       0       0
   833 ;;      Locals:         0       0       0       0
   834 ;;      Temps:          5       0       0       0
   835 ;;      Totals:         5       0       0       0
   836 ;;Total ram usage:        5 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		Interrupt level 1
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _my_isr_routine
   847  0010                     _my_isr_routine:	
   848  0010                     i1l853:	
   849                           
   850                           ;interrupts.c: 36:     if(INTF){
   851  0010  1C8B               	btfss	11,1	;volatile
   852  0011  2813               	goto	u25_21
   853  0012  2814               	goto	u25_20
   854  0013                     u25_21:	
   855  0013  2844               	goto	i1l25
   856  0014                     u25_20:	
   857  0014                     i1l855:	
   858                           
   859                           ;interrupts.c: 38:         overtorgue_flag = 1;
   860  0014  01F6               	clrf	_overtorgue_flag
   861  0015  0AF6               	incf	_overtorgue_flag,f
   862                           
   863                           ;interrupts.c: 39:         if (RB4==0 && RB5==0 ) {
   864  0016  1283               	bcf	3,5	;RP0=0, select bank0
   865  0017  1303               	bcf	3,6	;RP1=0, select bank0
   866  0018  1A06               	btfsc	6,4	;volatile
   867  0019  281B               	goto	u26_21
   868  001A  281C               	goto	u26_20
   869  001B                     u26_21:	
   870  001B  2823               	goto	i1l26
   871  001C                     u26_20:	
   872  001C                     i1l857:	
   873  001C  1A86               	btfsc	6,5	;volatile
   874  001D  281F               	goto	u27_21
   875  001E  2820               	goto	u27_20
   876  001F                     u27_21:	
   877  001F  2823               	goto	i1l26
   878  0020                     u27_20:	
   879  0020                     i1l859:	
   880                           
   881                           ;interrupts.c: 40:             RA0 = 1;
   882  0020  1405               	bsf	5,0	;volatile
   883                           
   884                           ;interrupts.c: 41:             RA1 = 1;
   885  0021  1485               	bsf	5,1	;volatile
   886                           
   887                           ;interrupts.c: 42:         } else if (RA0==0 || RA1==0 ) {
   888  0022  2842               	goto	i1l27
   889  0023                     i1l26:	
   890  0023  1C05               	btfss	5,0	;volatile
   891  0024  2826               	goto	u28_21
   892  0025  2827               	goto	u28_20
   893  0026                     u28_21:	
   894  0026  282B               	goto	i1l30
   895  0027                     u28_20:	
   896  0027                     i1l861:	
   897  0027  1885               	btfsc	5,1	;volatile
   898  0028  282A               	goto	u29_21
   899  0029  282B               	goto	u29_20
   900  002A                     u29_21:	
   901  002A  2838               	goto	i1l865
   902  002B                     u29_20:	
   903  002B                     i1l30:	
   904                           
   905                           ;interrupts.c: 43:             RA0 = 1;
   906  002B  1405               	bsf	5,0	;volatile
   907                           
   908                           ;interrupts.c: 44:             RA1 = 1;
   909  002C  1485               	bsf	5,1	;volatile
   910  002D                     i1l863:	
   911                           
   912                           ;interrupts.c: 45:             movement_direction = (movement_direction==0)?1:0;
   913  002D  0875               	movf	_movement_direction,w
   914  002E  1903               	btfsc	3,2
   915  002F  2831               	goto	u30_21
   916  0030  2833               	goto	u30_20
   917  0031                     u30_21:	
   918  0031  3001               	movlw	1
   919  0032  2834               	goto	u31_20
   920  0033                     u30_20:	
   921  0033  3000               	movlw	0
   922  0034                     u31_20:	
   923  0034  00F0               	movwf	??_my_isr_routine
   924  0035  0870               	movf	??_my_isr_routine,w
   925  0036  00F5               	movwf	_movement_direction
   926                           
   927                           ;interrupts.c: 46:         } else {
   928  0037  2842               	goto	i1l27
   929  0038                     i1l865:	
   930                           
   931                           ;interrupts.c: 47:             if(movement_direction==1) {
   932  0038  0375               	decf	_movement_direction,w
   933  0039  1D03               	btfss	3,2
   934  003A  283C               	goto	u32_21
   935  003B  283D               	goto	u32_20
   936  003C                     u32_21:	
   937  003C  2840               	goto	i1l32
   938  003D                     u32_20:	
   939  003D                     i1l867:	
   940                           
   941                           ;interrupts.c: 48:                 RA1 = 1;
   942  003D  1485               	bsf	5,1	;volatile
   943                           
   944                           ;interrupts.c: 49:                 RA0 = 0;
   945  003E  1005               	bcf	5,0	;volatile
   946                           
   947                           ;interrupts.c: 50:             } else {
   948  003F  2842               	goto	i1l27
   949  0040                     i1l32:	
   950                           
   951                           ;interrupts.c: 51:                 RA1 = 0;
   952  0040  1085               	bcf	5,1	;volatile
   953                           
   954                           ;interrupts.c: 52:                 RA0 = 1;
   955  0041  1405               	bsf	5,0	;volatile
   956  0042                     i1l27:	
   957                           
   958                           ;interrupts.c: 55:         INTF=0;
   959  0042  108B               	bcf	11,1	;volatile
   960                           
   961                           ;interrupts.c: 56:     } else if (RBIF){
   962  0043  2886               	goto	i1l45
   963  0044                     i1l25:	
   964  0044  1C0B               	btfss	11,0	;volatile
   965  0045  2847               	goto	u33_21
   966  0046  2848               	goto	u33_20
   967  0047                     u33_21:	
   968  0047  2886               	goto	i1l45
   969  0048                     u33_20:	
   970  0048                     i1l869:	
   971                           
   972                           ;interrupts.c: 58:         if (RB6==0) {
   973  0048  1283               	bcf	3,5	;RP0=0, select bank0
   974  0049  1303               	bcf	3,6	;RP1=0, select bank0
   975  004A  1B06               	btfsc	6,6	;volatile
   976  004B  284D               	goto	u34_21
   977  004C  284E               	goto	u34_20
   978  004D                     u34_21:	
   979  004D  286C               	goto	i1l36
   980  004E                     u34_20:	
   981  004E                     i1l871:	
   982                           
   983                           ;interrupts.c: 60:             if (movement_direction==1) {
   984  004E  0375               	decf	_movement_direction,w
   985  004F  1D03               	btfss	3,2
   986  0050  2852               	goto	u35_21
   987  0051  2853               	goto	u35_20
   988  0052                     u35_21:	
   989  0052  2868               	goto	i1l37
   990  0053                     u35_20:	
   991  0053                     i1l873:	
   992                           
   993                           ;interrupts.c: 61:                 RA0 = 1;
   994  0053  1405               	bsf	5,0	;volatile
   995                           
   996                           ;interrupts.c: 62:                 RA1 = 0;
   997  0054  1085               	bcf	5,1	;volatile
   998  0055                     i1l875:	
   999                           
  1000                           ;interrupts.c: 63:                 _delay((unsigned long)((1500)*(4000000/4000.0)));
  1001  0055  3008               	movlw	8
  1002  0056  00F2               	movwf	??_my_isr_routine+2
  1003  0057  309D               	movlw	157
  1004  0058  00F1               	movwf	??_my_isr_routine+1
  1005  0059  3005               	movlw	5
  1006  005A  00F0               	movwf	??_my_isr_routine
  1007  005B                     u66_27:	
  1008  005B  0BF0               	decfsz	??_my_isr_routine,f
  1009  005C  285B               	goto	u66_27
  1010  005D  0BF1               	decfsz	??_my_isr_routine+1,f
  1011  005E  285B               	goto	u66_27
  1012  005F  0BF2               	decfsz	??_my_isr_routine+2,f
  1013  0060  285B               	goto	u66_27
  1014  0061  2862               	nop2
  1015  0062                     i1l877:	
  1016                           
  1017                           ;interrupts.c: 64:                 RA1 = 1;
  1018  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0064  1485               	bsf	5,1	;volatile
  1021  0065                     i1l879:	
  1022                           
  1023                           ;interrupts.c: 65:                 overtorgue_flag=0;
  1024  0065  01F6               	clrf	_overtorgue_flag
  1025  0066                     i1l881:	
  1026                           
  1027                           ;interrupts.c: 66:                 movement_direction = 0;
  1028  0066  01F5               	clrf	_movement_direction
  1029                           
  1030                           ;interrupts.c: 67:             } else {
  1031  0067  2885               	goto	i1l39
  1032  0068                     i1l37:	
  1033                           
  1034                           ;interrupts.c: 68:                 RA1 = 1;
  1035  0068  1485               	bsf	5,1	;volatile
  1036  0069                     i1l883:	
  1037                           
  1038                           ;interrupts.c: 69:                 overtorgue_flag=0;
  1039  0069  01F6               	clrf	_overtorgue_flag
  1040                           
  1041                           ;interrupts.c: 70:                 movement_direction = 0;
  1042  006A  01F5               	clrf	_movement_direction
  1043  006B  2885               	goto	i1l39
  1044  006C                     i1l36:	
  1045  006C  1A06               	btfsc	6,4	;volatile
  1046  006D  286F               	goto	u36_21
  1047  006E  2870               	goto	u36_20
  1048  006F                     u36_21:	
  1049  006F  2878               	goto	i1l40
  1050  0070                     u36_20:	
  1051  0070                     i1l885:	
  1052  0070  1A86               	btfsc	6,5	;volatile
  1053  0071  2873               	goto	u37_21
  1054  0072  2874               	goto	u37_20
  1055  0073                     u37_21:	
  1056  0073  2878               	goto	i1l40
  1057  0074                     u37_20:	
  1058  0074                     i1l887:	
  1059                           
  1060                           ;interrupts.c: 75:             RA0 = 1;
  1061  0074  1405               	bsf	5,0	;volatile
  1062                           
  1063                           ;interrupts.c: 76:             RA1 = 1;
  1064  0075  1485               	bsf	5,1	;volatile
  1065  0076                     i1l889:	
  1066                           
  1067                           ;interrupts.c: 77:             overtorgue_flag=0;
  1068  0076  01F6               	clrf	_overtorgue_flag
  1069                           
  1070                           ;interrupts.c: 79:         } else if (RB4==0) {
  1071  0077  2885               	goto	i1l39
  1072  0078                     i1l40:	
  1073  0078  1A06               	btfsc	6,4	;volatile
  1074  0079  287B               	goto	u38_21
  1075  007A  287C               	goto	u38_20
  1076  007B                     u38_21:	
  1077  007B  287E               	goto	i1l42
  1078  007C                     u38_20:	
  1079  007C                     i1l891:	
  1080                           
  1081                           ;interrupts.c: 81:             RA0 = 1;
  1082  007C  1405               	bsf	5,0	;volatile
  1083  007D  2866               	goto	i1l881
  1084  007E                     i1l42:	
  1085  007E  1A86               	btfsc	6,5	;volatile
  1086  007F  2881               	goto	u39_21
  1087  0080  2882               	goto	u39_20
  1088  0081                     u39_21:	
  1089  0081  2885               	goto	i1l39
  1090  0082                     u39_20:	
  1091  0082                     i1l895:	
  1092                           
  1093                           ;interrupts.c: 86:             RA1 = 1;
  1094  0082  1485               	bsf	5,1	;volatile
  1095                           
  1096                           ;interrupts.c: 87:             movement_direction = 1;
  1097  0083  01F5               	clrf	_movement_direction
  1098  0084  0AF5               	incf	_movement_direction,f
  1099  0085                     i1l39:	
  1100                           
  1101                           ;interrupts.c: 89:         RBIF=0;
  1102  0085  100B               	bcf	11,0	;volatile
  1103  0086                     i1l45:	
  1104  0086  0874               	movf	??_my_isr_routine+4,w
  1105  0087  008A               	movwf	10
  1106  0088  0E73               	swapf	(??_my_isr_routine+3)^(0+4294967168),w
  1107  0089  0083               	movwf	3
  1108  008A  0EFE               	swapf	btemp,f
  1109  008B  0E7E               	swapf	btemp,w
  1110  008C  0009               	retfie
  1111  008D                     __end_of_my_isr_routine:	
  1112  007E                     btemp	set	126	;btemp
  1113  007E                     wtemp0	set	126
  1114                           
  1115                           	psect	intentry
  1116  0004                     __pintentry:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _my_isr_routine: [wreg+status,2+status,0]
  1119                           
  1120  0004                     interrupt_function:	
  1121  007E                     saved_w	set	btemp
  1122  0004  00FE               	movwf	btemp
  1123  0005  0E03               	swapf	3,w
  1124  0006  00F3               	movwf	??_my_isr_routine+3
  1125  0007  080A               	movf	10,w
  1126  0008  00F4               	movwf	??_my_isr_routine+4
  1127  0009  2810               	ljmp	_my_isr_routine


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitApp

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_isr_routine                                       5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      10        0.0%
ABS                  0      0       D       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 22 18:51:00 2020

                 __CFG_CP$OFF 0000                            l81 0128                            l73 00FF  
                          l75 00F8                            l77 010B                            l79 0117  
                          l88 013D                           l121 00E6                           l117 00E0  
                         l931 0091                           l941 009F                           l933 0094  
                         l951 00C6                           l943 00A2                           l935 0096  
                         l961 00DE                           l953 00C7                           l945 00B1  
                         l937 009A                           l929 008D                           l963 00E4  
                         l955 00C8                           l947 00B4                           l939 009C  
                         l971 00E9                           l957 00D7                           l949 00C3  
                         l981 0107                           l973 00EE                           l959 00DA  
                         l991 0123                           l983 010F                           l975 00F4  
                         l967 00E7                           l993 0124                           l985 0113  
                         l977 00FC                           l969 00E8                           l995 0126  
                         l987 011B                           l979 0103                           l989 011F  
                         l997 012B                           _RA0 0028                           _RA1 0029  
                         _RA2 002A                           _RA3 002B                           _RA4 002C  
                         _RB4 0034                           _RB5 0035                           _RB6 0036  
                         _RB7 0037                           u500 00DE                           u501 00DD  
                         u510 00E4                           u511 00E3                           u600 011F  
                         u520 00EE                           u601 011E                           u521 00ED  
                         u610 0123                           u530 00F4                  __CFG_CPD$OFF 0000  
                         u611 0122                           u531 00F3                           u540 00F8  
                         u541 00F7                           u550 0103                           u551 0102  
                         u560 0107                           u561 0106                           u570 010F  
                         u627 0133                           u571 010E                           u580 0113  
                         u637 00AA                           u581 0112                           u590 011B  
                         u647 00BC                           u591 011A                           u657 00D0  
             _overtorgue_flag 0076                  __CFG_LVP$OFF 0000                          i1l30 002B  
                        _INTF 0059                          i1l40 0078                          i1l32 0040  
                        _RBIF 0058                          i1l25 0044                          i1l42 007E  
                        i1l26 0023                          i1l27 0042                          i1l36 006C  
                        i1l37 0068                          i1l45 0086                          i1l39 0085  
                        _main 00E7                          btemp 007E                          start 000A  
             __end_of_InitApp 00E7                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _CMCON 001F                         i1l861 0027                         i1l853 0010  
                       i1l871 004E                         i1l863 002D                         i1l855 0014  
                       i1l881 0066                         i1l873 0053                         i1l865 0038  
                       i1l857 001C                         i1l891 007C                         i1l883 0069  
                       i1l875 0055                         i1l867 003D                         i1l859 0020  
                       i1l885 0070                         i1l877 0062                         i1l869 0048  
                       i1l895 0082                         i1l887 0074                         i1l879 0065  
                       i1l889 0076                         u30_20 0033                         u30_21 0031  
                       u31_20 0034                         u32_20 003D                         u32_21 003C  
                       u33_20 0048                         u25_20 0014                         u33_21 0047  
                       u25_21 0013                         u34_20 004E                         u26_20 001C  
                       u34_21 004D                         u26_21 001B                         u35_20 0053  
                       u27_20 0020                         u35_21 0052                         u27_21 001F  
                       _PORTA 0005                         u36_20 0070                         u28_20 0027  
                       u36_21 006F                         u28_21 0026                         u37_20 0074  
                       u29_20 002B                         u37_21 0073                         u29_21 002A  
                       u38_20 007C                         u38_21 007B                         u39_20 0082  
                       u39_21 0081                         _TRISA 0085                         _TRISB 0086  
                       u66_27 005B           _ConfigureOscillator 013D                __CFG_BOREN$OFF 0000  
                       pclath 000A                         status 0003                         wtemp0 007E  
        ?_ConfigureOscillator 0070                __CFG_MCLRE$OFF 0000               __initialization 000B  
                __end_of_main 013C                        ??_main 0023                        _INTEDG 040E  
                      _INTCON 000B                     ??_InitApp 0020         ??_ConfigureOscillator 0075  
              __CFG_PWRTE$OFF 0000                  __pdataCOMMON 0076                        saved_w 007E  
     __end_of__initialization 000E                __pcstackCOMMON 0070                    __pmaintext 00E7  
                  __pintentry 0004            _movement_direction 0075       __size_of_my_isr_routine 007D  
                     _InitApp 008D                       __ptext1 008D                       __ptext2 013D  
                     __ptext3 0010          end_of_initialization 000E   __end_of_ConfigureOscillator 013E  
               __pidataCOMMON 013C           start_initialization 000B                _my_isr_routine 0010  
                 __pbssCOMMON 0075                     ___latbits 0000                 __pcstackBANK0 0020  
      __end_of_my_isr_routine 008D                      ?_InitApp 0070               ?_my_isr_routine 0070  
           interrupt_function 0004              __size_of_InitApp 005A                 __size_of_main 0055  
__size_of_ConfigureOscillator 0001                      intlevel1 0000              ??_my_isr_routine 0070  
          __CFG_FOSC$INTOSCIO 0000  
