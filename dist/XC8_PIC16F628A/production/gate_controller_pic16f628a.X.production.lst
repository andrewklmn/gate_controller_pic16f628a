

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 22 16:19:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  0092                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  008C                     	;# 
   153  008E                     	;# 
   154  0092                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009F                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  008C                     	;# 
   190  008E                     	;# 
   191  0092                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0092                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009F                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  008C                     	;# 
   264  008E                     	;# 
   265  0092                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009F                     	;# 
   273                           
   274                           	psect	idataCOMMON
   275  0131                     __pidataCOMMON:	
   276                           
   277                           ;initializer for _overtorgue_flag
   278  0131  3401               	retlw	1
   279  000B                     _INTCON	set	11
   280  0005                     _PORTA	set	5
   281  001F                     _CMCON	set	31
   282  0037                     _RB7	set	55
   283  002A                     _RA2	set	42
   284  002B                     _RA3	set	43
   285  002C                     _RA4	set	44
   286  0035                     _RB5	set	53
   287  0034                     _RB4	set	52
   288  0036                     _RB6	set	54
   289  0058                     _RBIF	set	88
   290  0029                     _RA1	set	41
   291  0028                     _RA0	set	40
   292  0059                     _INTF	set	89
   293  0086                     _TRISB	set	134
   294  0085                     _TRISA	set	133
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  000B                     start_initialization:	
   300  000B                     __initialization:	
   301                           
   302                           ; Initialize objects allocated to COMMON
   303  000B  2131               	fcall	__pidataCOMMON	;fetch initializer
   304  000C  00F6               	movwf	__pdataCOMMON& (0+127)
   305                           
   306                           ; Clear objects allocated to COMMON
   307  000D  01F5               	clrf	__pbssCOMMON& (0+127)
   308  000E                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311  000E                     __end_of__initialization:	
   312  000E  0183               	clrf	3
   313  000F  2887               	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMMON
   316  0075                     __pbssCOMMON:	
   317  0075                     _movement_direction:	
   318  0075                     	ds	1
   319                           
   320                           	psect	dataCOMMON
   321  0076                     __pdataCOMMON:	
   322  0076                     _overtorgue_flag:	
   323  0076                     	ds	1
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:	
   327  0070                     ?_ConfigureOscillator:	
   328  0070                     ?_InitApp:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_my_isr_routine:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_my_isr_routine:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	5
   343  0075                     ??_ConfigureOscillator:	
   344                           
   345                           	psect	cstackBANK0
   346  0020                     __pcstackBANK0:	
   347                           ; 1 bytes @ 0x5
   348                           
   349  0020                     ??_InitApp:	
   350                           
   351                           ; 1 bytes @ 0x0
   352  0020                     	ds	3
   353  0023                     ??_main:	
   354                           
   355                           ; 1 bytes @ 0x3
   356  0023                     	ds	3
   357                           
   358                           	psect	maintext
   359  0087                     __pmaintext:	
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 29 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : B00/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   379 ;;      Params:         0       0       0       0
   380 ;;      Locals:         0       0       0       0
   381 ;;      Temps:          0       3       0       0
   382 ;;      Totals:         0       3       0       0
   383 ;;Total ram usage:        3 bytes
   384 ;; Hardware stack levels required when called:    2
   385 ;; This function calls:
   386 ;;		_ConfigureOscillator
   387 ;;		_InitApp
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _main
   395  0087                     _main:	
   396  0087                     l947:	
   397                           ;incstack = 0
   398                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   399                           
   400                           
   401                           ;main.c: 32:     ConfigureOscillator();
   402  0087  2132               	fcall	_ConfigureOscillator
   403  0088                     l949:	
   404                           
   405                           ;main.c: 35:     InitApp();
   406  0088  20DC               	fcall	_InitApp
   407  0089                     l951:	
   408                           
   409                           ;main.c: 39:     {;main.c: 40:         if (overtorgue_flag==0 || (RB4==0 && RB5==0)) {
   410  0089  0876               	movf	_overtorgue_flag,w
   411  008A  1903               	btfsc	3,2
   412  008B  288D               	goto	u441
   413  008C  288E               	goto	u440
   414  008D                     u441:	
   415  008D  2898               	goto	l71
   416  008E                     u440:	
   417  008E                     l953:	
   418  008E  1283               	bcf	3,5	;RP0=0, select bank0
   419  008F  1303               	bcf	3,6	;RP1=0, select bank0
   420  0090  1A06               	btfsc	6,4	;volatile
   421  0091  2893               	goto	u451
   422  0092  2894               	goto	u450
   423  0093                     u451:	
   424  0093  289F               	goto	l69
   425  0094                     u450:	
   426  0094                     l955:	
   427  0094  1A86               	btfsc	6,5	;volatile
   428  0095  2897               	goto	u461
   429  0096  2898               	goto	u460
   430  0097                     u461:	
   431  0097  289F               	goto	l69
   432  0098                     u460:	
   433  0098                     l71:	
   434                           
   435                           ;main.c: 41:             RA4 = 1;
   436  0098  1283               	bcf	3,5	;RP0=0, select bank0
   437  0099  1303               	bcf	3,6	;RP1=0, select bank0
   438  009A  1605               	bsf	5,4	;volatile
   439                           
   440                           ;main.c: 42:             RA3= 1;
   441  009B  1585               	bsf	5,3	;volatile
   442  009C                     l957:	
   443                           
   444                           ;main.c: 43:             RA2 = !RA2;
   445  009C  3004               	movlw	4
   446  009D  0685               	xorwf	5,f
   447                           
   448                           ;main.c: 45:         } else if(RB4==0 && RB5==1) {
   449  009E  28CB               	goto	l977
   450  009F                     l69:	
   451  009F  1A06               	btfsc	6,4	;volatile
   452  00A0  28A2               	goto	u471
   453  00A1  28A3               	goto	u470
   454  00A2                     u471:	
   455  00A2  28AB               	goto	l73
   456  00A3                     u470:	
   457  00A3                     l959:	
   458  00A3  1E86               	btfss	6,5	;volatile
   459  00A4  28A6               	goto	u481
   460  00A5  28A7               	goto	u480
   461  00A6                     u481:	
   462  00A6  28AB               	goto	l73
   463  00A7                     u480:	
   464  00A7                     l961:	
   465                           
   466                           ;main.c: 47:             RA4 = 1;
   467  00A7  1605               	bsf	5,4	;volatile
   468                           
   469                           ;main.c: 48:             RA3 = 1;
   470  00A8  1585               	bsf	5,3	;volatile
   471                           
   472                           ;main.c: 49:             RA2 = 0;
   473  00A9  1105               	bcf	5,2	;volatile
   474                           
   475                           ;main.c: 51:         } else if(RB4==1 && RB5==0) {
   476  00AA  28CB               	goto	l977
   477  00AB                     l73:	
   478  00AB  1E06               	btfss	6,4	;volatile
   479  00AC  28AE               	goto	u491
   480  00AD  28AF               	goto	u490
   481  00AE                     u491:	
   482  00AE  28B7               	goto	l75
   483  00AF                     u490:	
   484  00AF                     l963:	
   485  00AF  1A86               	btfsc	6,5	;volatile
   486  00B0  28B2               	goto	u501
   487  00B1  28B3               	goto	u500
   488  00B2                     u501:	
   489  00B2  28B7               	goto	l75
   490  00B3                     u500:	
   491  00B3                     l965:	
   492                           
   493                           ;main.c: 53:             RA4=0;
   494  00B3  1205               	bcf	5,4	;volatile
   495                           
   496                           ;main.c: 54:             RA3=1;
   497  00B4  1585               	bsf	5,3	;volatile
   498                           
   499                           ;main.c: 55:             RA2=1;
   500  00B5  1505               	bsf	5,2	;volatile
   501                           
   502                           ;main.c: 57:         } else if(RB4==1
   503  00B6  28CB               	goto	l977
   504  00B7                     l75:	
   505  00B7  1E06               	btfss	6,4	;volatile
   506  00B8  28BA               	goto	u511
   507  00B9  28BB               	goto	u510
   508  00BA                     u511:	
   509  00BA  28C8               	goto	l77
   510  00BB                     u510:	
   511  00BB                     l967:	
   512  00BB  1E86               	btfss	6,5	;volatile
   513  00BC  28BE               	goto	u521
   514  00BD  28BF               	goto	u520
   515  00BE                     u521:	
   516  00BE  28C8               	goto	l77
   517  00BF                     u520:	
   518  00BF                     l969:	
   519  00BF  1B86               	btfsc	6,7	;volatile
   520  00C0  28C2               	goto	u531
   521  00C1  28C3               	goto	u530
   522  00C2                     u531:	
   523  00C2  28C8               	goto	l77
   524  00C3                     u530:	
   525  00C3                     l971:	
   526                           
   527                           ;main.c: 59:                     && RB7==0) {;main.c: 61:             RA4 = 1;
   528  00C3  1605               	bsf	5,4	;volatile
   529  00C4                     l973:	
   530                           
   531                           ;main.c: 62:             RA3=!RA3;
   532  00C4  3008               	movlw	8
   533  00C5  0685               	xorwf	5,f
   534  00C6                     l975:	
   535                           
   536                           ;main.c: 63:             RA2 = 1;
   537  00C6  1505               	bsf	5,2	;volatile
   538                           
   539                           ;main.c: 65:         } else {
   540  00C7  28CB               	goto	l977
   541  00C8                     l77:	
   542                           
   543                           ;main.c: 66:             RA4 = 1;
   544  00C8  1605               	bsf	5,4	;volatile
   545                           
   546                           ;main.c: 67:             RA3= 1;
   547  00C9  1585               	bsf	5,3	;volatile
   548                           
   549                           ;main.c: 68:             RA2 = 1;
   550  00CA  1505               	bsf	5,2	;volatile
   551  00CB                     l977:	
   552                           
   553                           ;main.c: 70:         _delay((unsigned long)((500)*(4000000/4000.0)));
   554  00CB  3003               	movlw	3
   555  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   556  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   557  00CE  00A5               	movwf	??_main+2
   558  00CF  308A               	movlw	138
   559  00D0  00A4               	movwf	??_main+1
   560  00D1  3055               	movlw	85
   561  00D2  00A3               	movwf	??_main
   562  00D3                     u547:	
   563  00D3  0BA3               	decfsz	??_main,f
   564  00D4  28D3               	goto	u547
   565  00D5  0BA4               	decfsz	??_main+1,f
   566  00D6  28D3               	goto	u547
   567  00D7  0BA5               	decfsz	??_main+2,f
   568  00D8  28D3               	goto	u547
   569  00D9  0000               	nop
   570  00DA  2889               	goto	l951
   571  00DB  280A               	ljmp	start
   572  00DC                     __end_of_main:	
   573                           
   574                           	psect	text1
   575  00DC                     __ptext1:	
   576 ;; *************** function _InitApp *****************
   577 ;; Defined at:
   578 ;;		line 25 in file "user.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   592 ;;      Params:         0       0       0       0
   593 ;;      Locals:         0       0       0       0
   594 ;;      Temps:          0       3       0       0
   595 ;;      Totals:         0       3       0       0
   596 ;;Total ram usage:        3 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _InitApp
   608  00DC                     _InitApp:	
   609  00DC                     l911:	
   610                           ;incstack = 0
   611                           ; Regs used in _InitApp: [wreg+status,2]
   612                           
   613                           
   614                           ;user.c: 28:     CMCON = 0b111;
   615  00DC  3007               	movlw	7
   616  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   617  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   618  00DF  009F               	movwf	31	;volatile
   619  00E0                     l913:	
   620                           
   621                           ;user.c: 31:     TRISA = 0b00000000;
   622  00E0  1683               	bsf	3,5	;RP0=1, select bank1
   623  00E1  1303               	bcf	3,6	;RP1=0, select bank1
   624  00E2  0185               	clrf	5	;volatile
   625  00E3                     l915:	
   626                           
   627                           ;user.c: 32:     TRISB = 0b11110001;
   628  00E3  30F1               	movlw	241
   629  00E4  0086               	movwf	6	;volatile
   630  00E5                     l917:	
   631                           
   632                           ;user.c: 35:     PORTA = 0b11111111;
   633  00E5  30FF               	movlw	255
   634  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   635  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   636  00E8  0085               	movwf	5	;volatile
   637  00E9                     l919:	
   638                           
   639                           ;user.c: 38:     INTCON = 0b10011000;
   640  00E9  3098               	movlw	152
   641  00EA  008B               	movwf	11	;volatile
   642  00EB                     l921:	
   643                           
   644                           ;user.c: 41:     RA2 = 0;
   645  00EB  1105               	bcf	5,2	;volatile
   646  00EC                     l923:	
   647                           
   648                           ;user.c: 42:     _delay((unsigned long)((500)*(4000000/4000.0)));
   649  00EC  3003               	movlw	3
   650  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   651  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   652  00EF  00A2               	movwf	??_InitApp+2
   653  00F0  308A               	movlw	138
   654  00F1  00A1               	movwf	??_InitApp+1
   655  00F2  3055               	movlw	85
   656  00F3  00A0               	movwf	??_InitApp
   657  00F4                     u557:	
   658  00F4  0BA0               	decfsz	??_InitApp,f
   659  00F5  28F4               	goto	u557
   660  00F6  0BA1               	decfsz	??_InitApp+1,f
   661  00F7  28F4               	goto	u557
   662  00F8  0BA2               	decfsz	??_InitApp+2,f
   663  00F9  28F4               	goto	u557
   664  00FA  0000               	nop
   665  00FB                     l925:	
   666                           
   667                           ;user.c: 43:     RA3 = 0;
   668  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   669  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   670  00FD  1185               	bcf	5,3	;volatile
   671  00FE                     l927:	
   672                           
   673                           ;user.c: 44:     _delay((unsigned long)((500)*(4000000/4000.0)));
   674  00FE  3003               	movlw	3
   675  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   676  0100  1303               	bcf	3,6	;RP1=0, select bank0
   677  0101  00A2               	movwf	??_InitApp+2
   678  0102  308A               	movlw	138
   679  0103  00A1               	movwf	??_InitApp+1
   680  0104  3055               	movlw	85
   681  0105  00A0               	movwf	??_InitApp
   682  0106                     u567:	
   683  0106  0BA0               	decfsz	??_InitApp,f
   684  0107  2906               	goto	u567
   685  0108  0BA1               	decfsz	??_InitApp+1,f
   686  0109  2906               	goto	u567
   687  010A  0BA2               	decfsz	??_InitApp+2,f
   688  010B  2906               	goto	u567
   689  010C  0000               	nop
   690  010D                     l929:	
   691                           
   692                           ;user.c: 45:     RA2 = 1;
   693  010D  1283               	bcf	3,5	;RP0=0, select bank0
   694  010E  1303               	bcf	3,6	;RP1=0, select bank0
   695  010F  1505               	bsf	5,2	;volatile
   696  0110                     l931:	
   697                           
   698                           ;user.c: 46:     RA3 = 1;
   699  0110  1585               	bsf	5,3	;volatile
   700  0111                     l933:	
   701                           
   702                           ;user.c: 47:     RA4 = 0;
   703  0111  1205               	bcf	5,4	;volatile
   704  0112                     l935:	
   705                           
   706                           ;user.c: 48:     _delay((unsigned long)((500)*(4000000/4000.0)));
   707  0112  3003               	movlw	3
   708  0113  1283               	bcf	3,5	;RP0=0, select bank0
   709  0114  1303               	bcf	3,6	;RP1=0, select bank0
   710  0115  00A2               	movwf	??_InitApp+2
   711  0116  308A               	movlw	138
   712  0117  00A1               	movwf	??_InitApp+1
   713  0118  3055               	movlw	85
   714  0119  00A0               	movwf	??_InitApp
   715  011A                     u577:	
   716  011A  0BA0               	decfsz	??_InitApp,f
   717  011B  291A               	goto	u577
   718  011C  0BA1               	decfsz	??_InitApp+1,f
   719  011D  291A               	goto	u577
   720  011E  0BA2               	decfsz	??_InitApp+2,f
   721  011F  291A               	goto	u577
   722  0120  0000               	nop
   723  0121                     l937:	
   724                           
   725                           ;user.c: 49:     RA4 = 1;
   726  0121  1283               	bcf	3,5	;RP0=0, select bank0
   727  0122  1303               	bcf	3,6	;RP1=0, select bank0
   728  0123  1605               	bsf	5,4	;volatile
   729  0124                     l939:	
   730                           
   731                           ;user.c: 51:     if (RB4==0) {
   732  0124  1A06               	btfsc	6,4	;volatile
   733  0125  2927               	goto	u421
   734  0126  2928               	goto	u420
   735  0127                     u421:	
   736  0127  292A               	goto	l111
   737  0128                     u420:	
   738  0128                     l941:	
   739                           
   740                           ;user.c: 52:         movement_direction = 0;
   741  0128  01F5               	clrf	_movement_direction
   742                           
   743                           ;user.c: 53:     } else if (RB5==0) {
   744  0129  2930               	goto	l115
   745  012A                     l111:	
   746  012A  1A86               	btfsc	6,5	;volatile
   747  012B  292D               	goto	u431
   748  012C  292E               	goto	u430
   749  012D                     u431:	
   750  012D  2928               	goto	l941
   751  012E                     u430:	
   752  012E                     l943:	
   753                           
   754                           ;user.c: 54:         movement_direction = 1;
   755  012E  01F5               	clrf	_movement_direction
   756  012F  0AF5               	incf	_movement_direction,f
   757  0130                     l115:	
   758                           ;user.c: 55:     } else {
   759                           
   760  0130  0008               	return
   761  0131                     __end_of_InitApp:	
   762                           
   763                           	psect	text2
   764  0132                     __ptext2:	
   765 ;; *************** function _ConfigureOscillator *****************
   766 ;; Defined at:
   767 ;;		line 18 in file "system.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		None
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   781 ;;      Params:         0       0       0       0
   782 ;;      Locals:         0       0       0       0
   783 ;;      Temps:          0       0       0       0
   784 ;;      Totals:         0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _ConfigureOscillator
   797  0132                     _ConfigureOscillator:	
   798  0132                     l84:	
   799                           ;incstack = 0
   800                           ; Regs used in _ConfigureOscillator: []
   801                           
   802  0132  0008               	return
   803  0133                     __end_of_ConfigureOscillator:	
   804                           
   805                           	psect	text3
   806  0010                     __ptext3:	
   807 ;; *************** function _my_isr_routine *****************
   808 ;; Defined at:
   809 ;;		line 29 in file "interrupts.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   823 ;;      Params:         0       0       0       0
   824 ;;      Locals:         0       0       0       0
   825 ;;      Temps:          5       0       0       0
   826 ;;      Totals:         5       0       0       0
   827 ;;Total ram usage:        5 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		Interrupt level 1
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _my_isr_routine
   838  0010                     _my_isr_routine:	
   839  0010                     i1l839:	
   840                           
   841                           ;interrupts.c: 36:     if(INTF){
   842  0010  1C8B               	btfss	11,1	;volatile
   843  0011  2813               	goto	u21_21
   844  0012  2814               	goto	u21_20
   845  0013                     u21_21:	
   846  0013  2839               	goto	i1l25
   847  0014                     u21_20:	
   848  0014                     i1l841:	
   849                           
   850                           ;interrupts.c: 38:         if (RA0==0 || RA1==0 ) {
   851  0014  1283               	bcf	3,5	;RP0=0, select bank0
   852  0015  1303               	bcf	3,6	;RP1=0, select bank0
   853  0016  1C05               	btfss	5,0	;volatile
   854  0017  2819               	goto	u22_21
   855  0018  281A               	goto	u22_20
   856  0019                     u22_21:	
   857  0019  281E               	goto	i1l28
   858  001A                     u22_20:	
   859  001A                     i1l843:	
   860  001A  1885               	btfsc	5,1	;volatile
   861  001B  281D               	goto	u23_21
   862  001C  281E               	goto	u23_20
   863  001D                     u23_21:	
   864  001D  282B               	goto	i1l26
   865  001E                     u23_20:	
   866  001E                     i1l28:	
   867                           
   868                           ;interrupts.c: 39:             RA0 = 1;
   869  001E  1405               	bsf	5,0	;volatile
   870                           
   871                           ;interrupts.c: 40:             RA1 = 1;
   872  001F  1485               	bsf	5,1	;volatile
   873  0020                     i1l845:	
   874                           
   875                           ;interrupts.c: 41:             movement_direction = (movement_direction==0)?1:0;
   876  0020  0875               	movf	_movement_direction,w
   877  0021  1903               	btfsc	3,2
   878  0022  2824               	goto	u24_21
   879  0023  2826               	goto	u24_20
   880  0024                     u24_21:	
   881  0024  3001               	movlw	1
   882  0025  2827               	goto	u25_20
   883  0026                     u24_20:	
   884  0026  3000               	movlw	0
   885  0027                     u25_20:	
   886  0027  00F0               	movwf	??_my_isr_routine
   887  0028  0870               	movf	??_my_isr_routine,w
   888  0029  00F5               	movwf	_movement_direction
   889                           
   890                           ;interrupts.c: 42:         } else {
   891  002A  2837               	goto	i1l29
   892  002B                     i1l26:	
   893                           
   894                           ;interrupts.c: 43:             overtorgue_flag = 1;
   895  002B  01F6               	clrf	_overtorgue_flag
   896  002C  0AF6               	incf	_overtorgue_flag,f
   897  002D                     i1l847:	
   898                           
   899                           ;interrupts.c: 44:             if(movement_direction==1) {
   900  002D  0375               	decf	_movement_direction,w
   901  002E  1D03               	btfss	3,2
   902  002F  2831               	goto	u26_21
   903  0030  2832               	goto	u26_20
   904  0031                     u26_21:	
   905  0031  2835               	goto	i1l30
   906  0032                     u26_20:	
   907  0032                     i1l849:	
   908                           
   909                           ;interrupts.c: 45:                 RA1 = 1;
   910  0032  1485               	bsf	5,1	;volatile
   911                           
   912                           ;interrupts.c: 46:                 RA0 = 0;
   913  0033  1005               	bcf	5,0	;volatile
   914                           
   915                           ;interrupts.c: 47:             } else {
   916  0034  2837               	goto	i1l29
   917  0035                     i1l30:	
   918                           
   919                           ;interrupts.c: 48:                 RA1 = 0;
   920  0035  1085               	bcf	5,1	;volatile
   921                           
   922                           ;interrupts.c: 49:                 RA0 = 1;
   923  0036  1405               	bsf	5,0	;volatile
   924  0037                     i1l29:	
   925                           ;interrupts.c: 51:         };
   926                           
   927                           
   928                           ;interrupts.c: 52:         INTF=0;
   929  0037  108B               	bcf	11,1	;volatile
   930                           
   931                           ;interrupts.c: 53:     } else if (RBIF){
   932  0038  2880               	goto	i1l41
   933  0039                     i1l25:	
   934  0039  1C0B               	btfss	11,0	;volatile
   935  003A  283C               	goto	u27_21
   936  003B  283D               	goto	u27_20
   937  003C                     u27_21:	
   938  003C  2880               	goto	i1l41
   939  003D                     u27_20:	
   940  003D                     i1l851:	
   941                           
   942                           ;interrupts.c: 55:         if (RB6==0) {
   943  003D  1283               	bcf	3,5	;RP0=0, select bank0
   944  003E  1303               	bcf	3,6	;RP1=0, select bank0
   945  003F  1B06               	btfsc	6,6	;volatile
   946  0040  2842               	goto	u28_21
   947  0041  2843               	goto	u28_20
   948  0042                     u28_21:	
   949  0042  2872               	goto	i1l34
   950  0043                     u28_20:	
   951  0043                     i1l853:	
   952                           
   953                           ;interrupts.c: 57:             RA0 = 1;
   954  0043  1405               	bsf	5,0	;volatile
   955                           
   956                           ;interrupts.c: 58:             RA1 = 1;
   957  0044  1485               	bsf	5,1	;volatile
   958  0045                     i1l855:	
   959                           
   960                           ;interrupts.c: 59:             overtorgue_flag=0;
   961  0045  01F6               	clrf	_overtorgue_flag
   962  0046                     i1l857:	
   963                           
   964                           ;interrupts.c: 62:             if (movement_direction==1) {
   965  0046  0375               	decf	_movement_direction,w
   966  0047  1D03               	btfss	3,2
   967  0048  284A               	goto	u29_21
   968  0049  284B               	goto	u29_20
   969  004A                     u29_21:	
   970  004A  285E               	goto	i1l35
   971  004B                     u29_20:	
   972  004B                     i1l859:	
   973                           
   974                           ;interrupts.c: 63:                 RA1 = 0;
   975  004B  1085               	bcf	5,1	;volatile
   976  004C                     i1l861:	
   977                           
   978                           ;interrupts.c: 64:                 _delay((unsigned long)((1500)*(4000000/4000.0)));
   979  004C  3008               	movlw	8
   980  004D  00F2               	movwf	??_my_isr_routine+2
   981  004E  309D               	movlw	157
   982  004F  00F1               	movwf	??_my_isr_routine+1
   983  0050  3005               	movlw	5
   984  0051  00F0               	movwf	??_my_isr_routine
   985  0052                     u58_27:	
   986  0052  0BF0               	decfsz	??_my_isr_routine,f
   987  0053  2852               	goto	u58_27
   988  0054  0BF1               	decfsz	??_my_isr_routine+1,f
   989  0055  2852               	goto	u58_27
   990  0056  0BF2               	decfsz	??_my_isr_routine+2,f
   991  0057  2852               	goto	u58_27
   992  0058  2859               	nop2
   993  0059                     i1l863:	
   994                           
   995                           ;interrupts.c: 65:                 RA1 = 1;
   996  0059  1283               	bcf	3,5	;RP0=0, select bank0
   997  005A  1303               	bcf	3,6	;RP1=0, select bank0
   998  005B  1485               	bsf	5,1	;volatile
   999  005C                     i1l865:	
  1000                           
  1001                           ;interrupts.c: 66:                 movement_direction = 0;
  1002  005C  01F5               	clrf	_movement_direction
  1003                           
  1004                           ;interrupts.c: 67:             } else {
  1005  005D  287F               	goto	i1l37
  1006  005E                     i1l35:	
  1007                           
  1008                           ;interrupts.c: 68:                 RA0 = 0;
  1009  005E  1005               	bcf	5,0	;volatile
  1010  005F                     i1l867:	
  1011                           
  1012                           ;interrupts.c: 69:                 _delay((unsigned long)((1500)*(4000000/4000.0)));
  1013  005F  3008               	movlw	8
  1014  0060  00F2               	movwf	??_my_isr_routine+2
  1015  0061  309D               	movlw	157
  1016  0062  00F1               	movwf	??_my_isr_routine+1
  1017  0063  3005               	movlw	5
  1018  0064  00F0               	movwf	??_my_isr_routine
  1019  0065                     u59_27:	
  1020  0065  0BF0               	decfsz	??_my_isr_routine,f
  1021  0066  2865               	goto	u59_27
  1022  0067  0BF1               	decfsz	??_my_isr_routine+1,f
  1023  0068  2865               	goto	u59_27
  1024  0069  0BF2               	decfsz	??_my_isr_routine+2,f
  1025  006A  2865               	goto	u59_27
  1026  006B  286C               	nop2
  1027  006C                     i1l869:	
  1028                           
  1029                           ;interrupts.c: 70:                 RA0 = 1;
  1030  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1031  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1032  006E  1405               	bsf	5,0	;volatile
  1033  006F                     i1l871:	
  1034                           
  1035                           ;interrupts.c: 71:                 movement_direction = 1;
  1036  006F  01F5               	clrf	_movement_direction
  1037  0070  0AF5               	incf	_movement_direction,f
  1038  0071  287F               	goto	i1l37
  1039  0072                     i1l34:	
  1040  0072  1A06               	btfsc	6,4	;volatile
  1041  0073  2875               	goto	u30_21
  1042  0074  2876               	goto	u30_20
  1043  0075                     u30_21:	
  1044  0075  2878               	goto	i1l38
  1045  0076                     u30_20:	
  1046  0076                     i1l873:	
  1047                           
  1048                           ;interrupts.c: 76:             RA0 = 1;
  1049  0076  1405               	bsf	5,0	;volatile
  1050  0077  285C               	goto	i1l865
  1051  0078                     i1l38:	
  1052  0078  1A86               	btfsc	6,5	;volatile
  1053  0079  287B               	goto	u31_21
  1054  007A  287C               	goto	u31_20
  1055  007B                     u31_21:	
  1056  007B  287F               	goto	i1l37
  1057  007C                     u31_20:	
  1058  007C                     i1l877:	
  1059                           
  1060                           ;interrupts.c: 81:             RA1 = 1;
  1061  007C  1485               	bsf	5,1	;volatile
  1062                           
  1063                           ;interrupts.c: 82:             movement_direction = 1;
  1064  007D  01F5               	clrf	_movement_direction
  1065  007E  0AF5               	incf	_movement_direction,f
  1066  007F                     i1l37:	
  1067                           
  1068                           ;interrupts.c: 84:         RBIF=0;
  1069  007F  100B               	bcf	11,0	;volatile
  1070  0080                     i1l41:	
  1071  0080  0874               	movf	??_my_isr_routine+4,w
  1072  0081  008A               	movwf	10
  1073  0082  0E73               	swapf	(??_my_isr_routine+3)^(0+4294967168),w
  1074  0083  0083               	movwf	3
  1075  0084  0EFE               	swapf	btemp,f
  1076  0085  0E7E               	swapf	btemp,w
  1077  0086  0009               	retfie
  1078  0087                     __end_of_my_isr_routine:	
  1079  007E                     btemp	set	126	;btemp
  1080  007E                     wtemp0	set	126
  1081                           
  1082                           	psect	intentry
  1083  0004                     __pintentry:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _my_isr_routine: [wreg+status,2+status,0]
  1086                           
  1087  0004                     interrupt_function:	
  1088  007E                     saved_w	set	btemp
  1089  0004  00FE               	movwf	btemp
  1090  0005  0E03               	swapf	3,w
  1091  0006  00F3               	movwf	??_my_isr_routine+3
  1092  0007  080A               	movf	10,w
  1093  0008  00F4               	movwf	??_my_isr_routine+4
  1094  0009  2810               	ljmp	_my_isr_routine


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitApp

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_isr_routine                                       5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      10        0.0%
ABS                  0      0       D       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 22 16:19:45 2020

                 __CFG_CP$OFF 0000                            l71 0098                            l73 00AB  
                          l75 00B7                            l84 0132                            l77 00C8  
                          l69 009F                           l111 012A                           l115 0130  
                         l911 00DC                           l921 00EB                           l913 00E0  
                         l931 0110                           l923 00EC                           l915 00E3  
                         l941 0128                           l933 0111                           l925 00FB  
                         l917 00E5                           l943 012E                           l935 0112  
                         l927 00FE                           l919 00E9                           l951 0089  
                         l937 0121                           l929 010D                           l961 00A7  
                         l953 008E                           l939 0124                           l971 00C3  
                         l963 00AF                           l955 0094                           l947 0087  
                         l973 00C4                           l965 00B3                           l957 009C  
                         l949 0088                           l975 00C6                           l967 00BB  
                         l959 00A3                           l969 00BF                           l977 00CB  
                         _RA0 0028                           _RA1 0029                           _RA2 002A  
                         _RA3 002B                           _RA4 002C                           _RB4 0034  
                         _RB5 0035                           _RB6 0036                           _RB7 0037  
                         u420 0128                           u500 00B3                           u421 0127  
                         u501 00B2                           u430 012E                           u510 00BB  
                         u431 012D                           u511 00BA                           u520 00BF  
                         u440 008E                           u521 00BE                           u441 008D  
                         u530 00C3                           u450 0094                  __CFG_CPD$OFF 0000  
                         u531 00C2                           u451 0093                           u460 0098  
                         u461 0097                           u470 00A3                           u471 00A2  
                         u480 00A7                           u481 00A6                           u490 00AF  
                         u547 00D3                           u491 00AE                           u557 00F4  
                         u567 0106                           u577 011A               _overtorgue_flag 0076  
                __CFG_LVP$OFF 0000                          i1l30 0035                          _INTF 0059  
                        _RBIF 0058                          i1l41 0080                          i1l25 0039  
                        i1l34 0072                          i1l26 002B                          i1l35 005E  
                        i1l28 001E                          i1l37 007F                          i1l29 0037  
                        i1l38 0078                          _main 0087                          btemp 007E  
                        start 000A               __end_of_InitApp 0131                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _CMCON 001F                         i1l841 0014  
                       i1l851 003D                         i1l843 001A                         i1l861 004C  
                       i1l853 0043                         i1l845 0020                         i1l871 006F  
                       i1l863 0059                         i1l855 0045                         i1l847 002D  
                       i1l839 0010                         i1l873 0076                         i1l865 005C  
                       i1l857 0046                         i1l849 0032                         i1l867 005F  
                       i1l859 004B                         i1l877 007C                         i1l869 006C  
                       u21_20 0014                         u21_21 0013                         u30_20 0076  
                       u22_20 001A                         u30_21 0075                         u22_21 0019  
                       u31_20 007C                         u23_20 001E                         u31_21 007B  
                       u23_21 001D                         u24_20 0026                         u24_21 0024  
                       u25_20 0027                         u26_20 0032                         u26_21 0031  
                       u27_20 003D                         u27_21 003C                         _PORTA 0005  
                       u28_20 0043                         u28_21 0042                         u29_20 004B  
                       u29_21 004A                         _TRISA 0085                         _TRISB 0086  
                       u58_27 0052                         u59_27 0065           _ConfigureOscillator 0132  
              __CFG_BOREN$OFF 0000                         pclath 000A                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0070                __CFG_MCLRE$OFF 0000  
             __initialization 000B                  __end_of_main 00DC                        ??_main 0023  
                      _INTCON 000B                     ??_InitApp 0020         ??_ConfigureOscillator 0075  
              __CFG_PWRTE$OFF 0000                  __pdataCOMMON 0076                        saved_w 007E  
     __end_of__initialization 000E                __pcstackCOMMON 0070                    __pmaintext 0087  
                  __pintentry 0004            _movement_direction 0075       __size_of_my_isr_routine 0077  
                     _InitApp 00DC                       __ptext1 00DC                       __ptext2 0132  
                     __ptext3 0010          end_of_initialization 000E   __end_of_ConfigureOscillator 0133  
               __pidataCOMMON 0131           start_initialization 000B                _my_isr_routine 0010  
                 __pbssCOMMON 0075                     ___latbits 0000                 __pcstackBANK0 0020  
      __end_of_my_isr_routine 0087                      ?_InitApp 0070               ?_my_isr_routine 0070  
           interrupt_function 0004              __size_of_InitApp 0055                 __size_of_main 0055  
__size_of_ConfigureOscillator 0001                      intlevel1 0000              ??_my_isr_routine 0070  
          __CFG_FOSC$INTOSCIO 0000  
