

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 18 11:00:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  0092                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  008C                     	;# 
   153  008E                     	;# 
   154  0092                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009F                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  008C                     	;# 
   190  008E                     	;# 
   191  0092                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  0086                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0092                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009F                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  008C                     	;# 
   264  008E                     	;# 
   265  0092                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009F                     	;# 
   273                           
   274                           	psect	idataCOMMON
   275  0237                     __pidataCOMMON:	
   276                           
   277                           ;initializer for _counter
   278  0237  3414               	retlw	20
   279  0238  3400               	retlw	0
   280                           
   281                           ;initializer for _must_be_closed
   282  0239  3401               	retlw	1
   283                           
   284                           ;initializer for _overtorgue_flag
   285  023A  3401               	retlw	1
   286  0005                     _PORTA	set	5
   287  001F                     _CMCON	set	31
   288  000B                     _INTCON	set	11
   289  0006                     _PORTB	set	6
   290  002A                     _RA2	set	42
   291  002B                     _RA3	set	43
   292  002F                     _RA7	set	47
   293  002D                     _RA5	set	45
   294  0036                     _RB6	set	54
   295  0058                     _RBIF	set	88
   296  002E                     _RA6	set	46
   297  0037                     _RB7	set	55
   298  0029                     _RA1	set	41
   299  0028                     _RA0	set	40
   300  0035                     _RB5	set	53
   301  0034                     _RB4	set	52
   302  0059                     _INTF	set	89
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  040E                     _INTEDG	set	1038
   306  040F                     _nRBPU	set	1039
   307                           
   308                           ; #config settings
   309  0000                     
   310                           	psect	cinit
   311  000B                     start_initialization:	
   312  000B                     __initialization:	
   313                           
   314                           ; Initialize objects allocated to COMMON
   315  000B  2237               	fcall	__pidataCOMMON	;fetch initializer
   316  000C  00F5               	movwf	__pdataCOMMON& (0+127)
   317  000D  2238               	fcall	__pidataCOMMON+1	;fetch initializer
   318  000E  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   319  000F  2239               	fcall	__pidataCOMMON+2	;fetch initializer
   320  0010  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   321  0011  223A               	fcall	__pidataCOMMON+3	;fetch initializer
   322  0012  00F8               	movwf	(__pdataCOMMON+3)& (0+127)
   323                           
   324                           ; Clear objects allocated to COMMON
   325  0013  01F9               	clrf	__pbssCOMMON& (0+127)
   326  0014  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   327  0015                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  0015                     __end_of__initialization:	
   331  0015  0183               	clrf	3
   332  0016  28F1               	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMMON
   335  0079                     __pbssCOMMON:	
   336  0079                     _temp:	
   337  0079                     	ds	1
   338  007A                     _movement_direction:	
   339  007A                     	ds	1
   340                           
   341                           	psect	dataCOMMON
   342  0075                     __pdataCOMMON:	
   343  0075                     _counter:	
   344  0075                     	ds	2
   345  0077                     _must_be_closed:	
   346  0077                     	ds	1
   347  0078                     _overtorgue_flag:	
   348  0078                     	ds	1
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:	
   352  0070                     ?_ConfigureOscillator:	
   353  0070                     ?_InitApp:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_my_isr_routine:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_my_isr_routine:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_main:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	5
   368                           
   369                           	psect	cstackBANK0
   370  0020                     __pcstackBANK0:	
   371  0020                     ??_ConfigureOscillator:	
   372  0020                     ??_InitApp:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0020                     	ds	3
   378  0023                     ??_main:	
   379                           
   380                           ; 1 bytes @ 0x3
   381  0023                     	ds	3
   382                           
   383                           	psect	maintext
   384  00F1                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 34 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : B00/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   404 ;;      Params:         0       0       0       0
   405 ;;      Locals:         0       0       0       0
   406 ;;      Temps:          0       3       0       0
   407 ;;      Totals:         0       3       0       0
   408 ;;Total ram usage:        3 bytes
   409 ;; Hardware stack levels required when called:    2
   410 ;; This function calls:
   411 ;;		_ConfigureOscillator
   412 ;;		_InitApp
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  00F1                     _main:	
   421  00F1                     l1225:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   424                           
   425                           
   426                           ;main.c: 37:     ConfigureOscillator();
   427  00F1  223B               	fcall	_ConfigureOscillator
   428  00F2                     l1227:	
   429                           
   430                           ;main.c: 40:     InitApp();
   431  00F2  21B5               	fcall	_InitApp
   432  00F3                     l1229:	
   433                           
   434                           ;main.c: 42:     if (RB4==0) {
   435  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   436  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   437  00F5  1A06               	btfsc	6,4	;volatile
   438  00F6  28F8               	goto	u891
   439  00F7  28F9               	goto	u890
   440  00F8                     u891:	
   441  00F8  28FB               	goto	l1233
   442  00F9                     u890:	
   443  00F9                     l1231:	
   444                           
   445                           ;main.c: 43:         movement_direction = 0;
   446  00F9  01FA               	clrf	_movement_direction
   447                           
   448                           ;main.c: 44:         must_be_closed = 0;
   449  00FA  01F7               	clrf	_must_be_closed
   450  00FB                     l1233:	
   451                           
   452                           ;main.c: 48:     {;main.c: 49:         if (overtorgue_flag==0 ) {
   453  00FB  0878               	movf	_overtorgue_flag,w
   454  00FC  1D03               	btfss	3,2
   455  00FD  28FF               	goto	u901
   456  00FE  2900               	goto	u900
   457  00FF                     u901:	
   458  00FF  2907               	goto	l112
   459  0100                     u900:	
   460  0100                     l1235:	
   461                           
   462                           ;main.c: 51:             RA7 = 0;
   463  0100  1283               	bcf	3,5	;RP0=0, select bank0
   464  0101  1303               	bcf	3,6	;RP1=0, select bank0
   465  0102  1385               	bcf	5,7	;volatile
   466                           
   467                           ;main.c: 52:             RA3= 0;
   468  0103  1185               	bcf	5,3	;volatile
   469  0104                     l1237:	
   470                           
   471                           ;main.c: 53:             RA2 = !RA2;
   472  0104  3004               	movlw	4
   473  0105  0685               	xorwf	5,f
   474                           
   475                           ;main.c: 55:         } else if (RB4==0 && RB5==0) {
   476  0106  2998               	goto	l1283
   477  0107                     l112:	
   478  0107  1283               	bcf	3,5	;RP0=0, select bank0
   479  0108  1303               	bcf	3,6	;RP1=0, select bank0
   480  0109  1A06               	btfsc	6,4	;volatile
   481  010A  290C               	goto	u911
   482  010B  290D               	goto	u910
   483  010C                     u911:	
   484  010C  293F               	goto	l114
   485  010D                     u910:	
   486  010D                     l1239:	
   487  010D  1A86               	btfsc	6,5	;volatile
   488  010E  2910               	goto	u921
   489  010F  2911               	goto	u920
   490  0110                     u921:	
   491  0110  293F               	goto	l114
   492  0111                     u920:	
   493  0111                     l1241:	
   494                           
   495                           ;main.c: 57:             RA7 = 0;
   496  0111  1385               	bcf	5,7	;volatile
   497                           
   498                           ;main.c: 58:             RA3= 0;
   499  0112  1185               	bcf	5,3	;volatile
   500                           
   501                           ;main.c: 59:             RA2 = 1;
   502  0113  1505               	bsf	5,2	;volatile
   503  0114                     l1243:	
   504                           
   505                           ;main.c: 60:             _delay((unsigned long)((100)*(4000000/4000.0)));
   506  0114  3082               	movlw	130
   507  0115  1283               	bcf	3,5	;RP0=0, select bank0
   508  0116  1303               	bcf	3,6	;RP1=0, select bank0
   509  0117  00A4               	movwf	??_main+1
   510  0118  30DD               	movlw	221
   511  0119  00A3               	movwf	??_main
   512  011A                     u1077:	
   513  011A  0BA3               	decfsz	??_main,f
   514  011B  291A               	goto	u1077
   515  011C  0BA4               	decfsz	??_main+1,f
   516  011D  291A               	goto	u1077
   517  011E  0000               	nop
   518  011F                     l1245:	
   519                           
   520                           ;main.c: 61:             RA2 = 0;
   521  011F  1283               	bcf	3,5	;RP0=0, select bank0
   522  0120  1303               	bcf	3,6	;RP1=0, select bank0
   523  0121  1105               	bcf	5,2	;volatile
   524                           
   525                           ;main.c: 62:             _delay((unsigned long)((100)*(4000000/4000.0)));
   526  0122  3082               	movlw	130
   527  0123  1283               	bcf	3,5	;RP0=0, select bank0
   528  0124  1303               	bcf	3,6	;RP1=0, select bank0
   529  0125  00A4               	movwf	??_main+1
   530  0126  30DD               	movlw	221
   531  0127  00A3               	movwf	??_main
   532  0128                     u1087:	
   533  0128  0BA3               	decfsz	??_main,f
   534  0129  2928               	goto	u1087
   535  012A  0BA4               	decfsz	??_main+1,f
   536  012B  2928               	goto	u1087
   537  012C  0000               	nop
   538  012D                     l1247:	
   539                           
   540                           ;main.c: 63:             RA2 = 1;
   541  012D  1283               	bcf	3,5	;RP0=0, select bank0
   542  012E  1303               	bcf	3,6	;RP1=0, select bank0
   543  012F  1505               	bsf	5,2	;volatile
   544                           
   545                           ;main.c: 64:             _delay((unsigned long)((100)*(4000000/4000.0)));
   546  0130  3082               	movlw	130
   547  0131  1283               	bcf	3,5	;RP0=0, select bank0
   548  0132  1303               	bcf	3,6	;RP1=0, select bank0
   549  0133  00A4               	movwf	??_main+1
   550  0134  30DD               	movlw	221
   551  0135  00A3               	movwf	??_main
   552  0136                     u1097:	
   553  0136  0BA3               	decfsz	??_main,f
   554  0137  2936               	goto	u1097
   555  0138  0BA4               	decfsz	??_main+1,f
   556  0139  2936               	goto	u1097
   557  013A  0000               	nop
   558  013B                     l1249:	
   559                           
   560                           ;main.c: 65:             RA2 = 0;
   561  013B  1283               	bcf	3,5	;RP0=0, select bank0
   562  013C  1303               	bcf	3,6	;RP1=0, select bank0
   563  013D  1105               	bcf	5,2	;volatile
   564                           
   565                           ;main.c: 67:         } else if(RB4==0 && RB5==1) {
   566  013E  2998               	goto	l1283
   567  013F                     l114:	
   568  013F  1A06               	btfsc	6,4	;volatile
   569  0140  2942               	goto	u931
   570  0141  2943               	goto	u930
   571  0142                     u931:	
   572  0142  295F               	goto	l116
   573  0143                     u930:	
   574  0143                     l1251:	
   575  0143  1E86               	btfss	6,5	;volatile
   576  0144  2946               	goto	u941
   577  0145  2947               	goto	u940
   578  0146                     u941:	
   579  0146  295F               	goto	l116
   580  0147                     u940:	
   581  0147                     l1253:	
   582                           
   583                           ;main.c: 69:             RA7 = 0;
   584  0147  1385               	bcf	5,7	;volatile
   585                           
   586                           ;main.c: 70:             RA3 = 0;
   587  0148  1185               	bcf	5,3	;volatile
   588  0149                     l1255:	
   589                           
   590                           ;main.c: 71:             if (counter>0) {
   591  0149  0876               	movf	_counter+1,w
   592  014A  3A80               	xorlw	128
   593  014B  00FF               	movwf	btemp+1
   594  014C  3080               	movlw	128
   595  014D  027F               	subwf	btemp+1,w
   596  014E  1D03               	skipz
   597  014F  2952               	goto	u955
   598  0150  3001               	movlw	1
   599  0151  0275               	subwf	_counter,w
   600  0152                     u955:	
   601  0152  1C03               	skipc
   602  0153  2955               	goto	u951
   603  0154  2956               	goto	u950
   604  0155                     u951:	
   605  0155  295A               	goto	l117
   606  0156                     u950:	
   607  0156                     l1257:	
   608                           
   609                           ;main.c: 72:                 RA2 = 1;
   610  0156  1283               	bcf	3,5	;RP0=0, select bank0
   611  0157  1303               	bcf	3,6	;RP1=0, select bank0
   612  0158  1505               	bsf	5,2	;volatile
   613                           
   614                           ;main.c: 73:             } else {
   615  0159  2998               	goto	l1283
   616  015A                     l117:	
   617                           
   618                           ;main.c: 74:                 RA2 = 0;
   619  015A  1283               	bcf	3,5	;RP0=0, select bank0
   620  015B  1303               	bcf	3,6	;RP1=0, select bank0
   621  015C  1105               	bcf	5,2	;volatile
   622                           
   623                           ;main.c: 75:                 RA6 = 0;
   624  015D  1305               	bcf	5,6	;volatile
   625  015E  2998               	goto	l1283
   626  015F                     l116:	
   627  015F  1E06               	btfss	6,4	;volatile
   628  0160  2962               	goto	u961
   629  0161  2963               	goto	u960
   630  0162                     u961:	
   631  0162  296B               	goto	l120
   632  0163                     u960:	
   633  0163                     l1259:	
   634  0163  1A86               	btfsc	6,5	;volatile
   635  0164  2966               	goto	u971
   636  0165  2967               	goto	u970
   637  0166                     u971:	
   638  0166  296B               	goto	l120
   639  0167                     u970:	
   640  0167                     l1261:	
   641                           
   642                           ;main.c: 79:             RA7=1;
   643  0167  1785               	bsf	5,7	;volatile
   644                           
   645                           ;main.c: 80:             RA3=0;
   646  0168  1185               	bcf	5,3	;volatile
   647                           
   648                           ;main.c: 81:             RA2=0;
   649  0169  1105               	bcf	5,2	;volatile
   650                           
   651                           ;main.c: 83:         } else if(RB4==1
   652  016A  2998               	goto	l1283
   653  016B                     l120:	
   654  016B  1E06               	btfss	6,4	;volatile
   655  016C  296E               	goto	u981
   656  016D  296F               	goto	u980
   657  016E                     u981:	
   658  016E  2985               	goto	l122
   659  016F                     u980:	
   660  016F                     l1263:	
   661  016F  1E86               	btfss	6,5	;volatile
   662  0170  2972               	goto	u991
   663  0171  2973               	goto	u990
   664  0172                     u991:	
   665  0172  2985               	goto	l122
   666  0173                     u990:	
   667  0173                     l1265:	
   668  0173  1A85               	btfsc	5,5	;volatile
   669  0174  2976               	goto	u1001
   670  0175  2977               	goto	u1000
   671  0176                     u1001:	
   672  0176  2985               	goto	l122
   673  0177                     u1000:	
   674  0177                     l1267:	
   675                           
   676                           ;main.c: 85:                     && RA5==0) {;main.c: 87:             if (RA1==1) {
   677  0177  1C85               	btfss	5,1	;volatile
   678  0178  297A               	goto	u1011
   679  0179  297B               	goto	u1010
   680  017A                     u1011:	
   681  017A  297D               	goto	l123
   682  017B                     u1010:	
   683  017B                     l1269:	
   684                           
   685                           ;main.c: 88:                 RA7 = 1;
   686  017B  1785               	bsf	5,7	;volatile
   687                           
   688                           ;main.c: 89:             } else {
   689  017C  297E               	goto	l1271
   690  017D                     l123:	
   691                           
   692                           ;main.c: 90:                 RA7 = 0;
   693  017D  1385               	bcf	5,7	;volatile
   694  017E                     l1271:	
   695                           
   696                           ;main.c: 92:             RA3=!RA3;
   697  017E  3008               	movlw	8
   698  017F  0685               	xorwf	5,f
   699  0180                     l1273:	
   700                           
   701                           ;main.c: 93:             if (RA0==1) {
   702  0180  1C05               	btfss	5,0	;volatile
   703  0181  2983               	goto	u1021
   704  0182  2984               	goto	u1020
   705  0183                     u1021:	
   706  0183  293B               	goto	l1249
   707  0184                     u1020:	
   708  0184  2956               	goto	l1257
   709  0185                     l122:	
   710  0185  1E06               	btfss	6,4	;volatile
   711  0186  2988               	goto	u1031
   712  0187  2989               	goto	u1030
   713  0188                     u1031:	
   714  0188  2995               	goto	l128
   715  0189                     u1030:	
   716  0189                     l1277:	
   717  0189  1E86               	btfss	6,5	;volatile
   718  018A  298C               	goto	u1041
   719  018B  298D               	goto	u1040
   720  018C                     u1041:	
   721  018C  2995               	goto	l128
   722  018D                     u1040:	
   723  018D                     l1279:	
   724  018D  1E85               	btfss	5,5	;volatile
   725  018E  2990               	goto	u1051
   726  018F  2991               	goto	u1050
   727  0190                     u1051:	
   728  0190  2995               	goto	l128
   729  0191                     u1050:	
   730  0191                     l1281:	
   731                           
   732                           ;main.c: 100:                     && RA5==1) {;main.c: 102:             RA7 = 0;
   733  0191  1385               	bcf	5,7	;volatile
   734                           
   735                           ;main.c: 104:             RA3=1;
   736  0192  1585               	bsf	5,3	;volatile
   737                           
   738                           ;main.c: 105:             RA2 = 0;
   739  0193  1105               	bcf	5,2	;volatile
   740                           
   741                           ;main.c: 107:         } else {
   742  0194  2998               	goto	l1283
   743  0195                     l128:	
   744                           
   745                           ;main.c: 108:             RA7 = 0;
   746  0195  1385               	bcf	5,7	;volatile
   747                           
   748                           ;main.c: 109:             RA3= 0;
   749  0196  1185               	bcf	5,3	;volatile
   750                           
   751                           ;main.c: 110:             RA2 = 0;
   752  0197  1105               	bcf	5,2	;volatile
   753  0198                     l1283:	
   754                           
   755                           ;main.c: 113:         counter--;
   756  0198  30FF               	movlw	255
   757  0199  07F5               	addwf	_counter,f
   758  019A  1803               	skipnc
   759  019B  0AF6               	incf	_counter+1,f
   760  019C  30FF               	movlw	255
   761  019D  07F6               	addwf	_counter+1,f
   762  019E                     l1285:	
   763                           
   764                           ;main.c: 114:         if (counter<0) {
   765  019E  1FF6               	btfss	_counter+1,7
   766  019F  29A1               	goto	u1061
   767  01A0  29A2               	goto	u1060
   768  01A1                     u1061:	
   769  01A1  29A4               	goto	l1289
   770  01A2                     u1060:	
   771  01A2                     l1287:	
   772                           
   773                           ;main.c: 115:             counter = 0;
   774  01A2  01F5               	clrf	_counter
   775  01A3  01F6               	clrf	_counter+1
   776  01A4                     l1289:	
   777                           
   778                           ;main.c: 118:         _delay((unsigned long)((500)*(4000000/4000.0)));
   779  01A4  3003               	movlw	3
   780  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   781  01A6  1303               	bcf	3,6	;RP1=0, select bank0
   782  01A7  00A5               	movwf	??_main+2
   783  01A8  308A               	movlw	138
   784  01A9  00A4               	movwf	??_main+1
   785  01AA  3055               	movlw	85
   786  01AB  00A3               	movwf	??_main
   787  01AC                     u1107:	
   788  01AC  0BA3               	decfsz	??_main,f
   789  01AD  29AC               	goto	u1107
   790  01AE  0BA4               	decfsz	??_main+1,f
   791  01AF  29AC               	goto	u1107
   792  01B0  0BA5               	decfsz	??_main+2,f
   793  01B1  29AC               	goto	u1107
   794  01B2  0000               	nop
   795  01B3  28FB               	goto	l1233
   796  01B4  280A               	ljmp	start
   797  01B5                     __end_of_main:	
   798                           
   799                           	psect	text1
   800  01B5                     __ptext1:	
   801 ;; *************** function _InitApp *****************
   802 ;; Defined at:
   803 ;;		line 25 in file "user.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   817 ;;      Params:         0       0       0       0
   818 ;;      Locals:         0       0       0       0
   819 ;;      Temps:          0       3       0       0
   820 ;;      Totals:         0       3       0       0
   821 ;;Total ram usage:        3 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _InitApp
   833  01B5                     _InitApp:	
   834  01B5                     l1167:	
   835                           ;incstack = 0
   836                           ; Regs used in _InitApp: [wreg+status,2]
   837                           
   838                           
   839                           ;user.c: 28:     INTCON = 0b00000000;
   840  01B5  018B               	clrf	11	;volatile
   841  01B6                     l1169:	
   842                           
   843                           ;user.c: 31:     CMCON = 0b00000111;
   844  01B6  3007               	movlw	7
   845  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   846  01B8  1303               	bcf	3,6	;RP1=0, select bank0
   847  01B9  009F               	movwf	31	;volatile
   848  01BA                     l1171:	
   849                           
   850                           ;user.c: 34:     TRISA = 0b00100000;
   851  01BA  3020               	movlw	32
   852  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   853  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   854  01BD  0085               	movwf	5	;volatile
   855                           
   856                           ;user.c: 35:     PORTA = 0b00000000;
   857  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   858  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   859  01C0  0185               	clrf	5	;volatile
   860  01C1                     l1173:	
   861                           
   862                           ;user.c: 37:     TRISB = 0b11110001;
   863  01C1  30F1               	movlw	241
   864  01C2  1683               	bsf	3,5	;RP0=1, select bank1
   865  01C3  1303               	bcf	3,6	;RP1=0, select bank1
   866  01C4  0086               	movwf	6	;volatile
   867  01C5                     l1175:	
   868                           
   869                           ;user.c: 38:     nRBPU = 0;
   870  01C5  1381               	bcf	1,7	;volatile
   871  01C6                     l1177:	
   872                           
   873                           ;user.c: 41:     RA6 = 0;
   874  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   875  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   876  01C8  1305               	bcf	5,6	;volatile
   877  01C9                     l1179:	
   878                           
   879                           ;user.c: 43:     RA0 = 0;
   880  01C9  1005               	bcf	5,0	;volatile
   881  01CA                     l1181:	
   882                           
   883                           ;user.c: 44:     RA1 = 0;
   884  01CA  1085               	bcf	5,1	;volatile
   885  01CB                     l1183:	
   886                           
   887                           ;user.c: 46:     RA2 = 1;
   888  01CB  1505               	bsf	5,2	;volatile
   889  01CC                     l1185:	
   890                           
   891                           ;user.c: 47:     _delay((unsigned long)((500)*(4000000/4000.0)));
   892  01CC  3003               	movlw	3
   893  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   894  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   895  01CF  00A2               	movwf	??_InitApp+2
   896  01D0  308A               	movlw	138
   897  01D1  00A1               	movwf	??_InitApp+1
   898  01D2  3055               	movlw	85
   899  01D3  00A0               	movwf	??_InitApp
   900  01D4                     u1117:	
   901  01D4  0BA0               	decfsz	??_InitApp,f
   902  01D5  29D4               	goto	u1117
   903  01D6  0BA1               	decfsz	??_InitApp+1,f
   904  01D7  29D4               	goto	u1117
   905  01D8  0BA2               	decfsz	??_InitApp+2,f
   906  01D9  29D4               	goto	u1117
   907  01DA  0000               	nop
   908  01DB                     l1187:	
   909                           
   910                           ;user.c: 48:     RA3 = 1;
   911  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   912  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   913  01DD  1585               	bsf	5,3	;volatile
   914  01DE                     l1189:	
   915                           
   916                           ;user.c: 49:     _delay((unsigned long)((500)*(4000000/4000.0)));
   917  01DE  3003               	movlw	3
   918  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   919  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   920  01E1  00A2               	movwf	??_InitApp+2
   921  01E2  308A               	movlw	138
   922  01E3  00A1               	movwf	??_InitApp+1
   923  01E4  3055               	movlw	85
   924  01E5  00A0               	movwf	??_InitApp
   925  01E6                     u1127:	
   926  01E6  0BA0               	decfsz	??_InitApp,f
   927  01E7  29E6               	goto	u1127
   928  01E8  0BA1               	decfsz	??_InitApp+1,f
   929  01E9  29E6               	goto	u1127
   930  01EA  0BA2               	decfsz	??_InitApp+2,f
   931  01EB  29E6               	goto	u1127
   932  01EC  0000               	nop
   933  01ED                     l1191:	
   934                           
   935                           ;user.c: 50:     RA2 = 0;
   936  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   937  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   938  01EF  1105               	bcf	5,2	;volatile
   939  01F0                     l1193:	
   940                           
   941                           ;user.c: 51:     RA3 = 0;
   942  01F0  1185               	bcf	5,3	;volatile
   943  01F1                     l1195:	
   944                           
   945                           ;user.c: 52:     RA7 = 1;
   946  01F1  1785               	bsf	5,7	;volatile
   947  01F2                     l1197:	
   948                           
   949                           ;user.c: 53:     _delay((unsigned long)((500)*(4000000/4000.0)));
   950  01F2  3003               	movlw	3
   951  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   952  01F4  1303               	bcf	3,6	;RP1=0, select bank0
   953  01F5  00A2               	movwf	??_InitApp+2
   954  01F6  308A               	movlw	138
   955  01F7  00A1               	movwf	??_InitApp+1
   956  01F8  3055               	movlw	85
   957  01F9  00A0               	movwf	??_InitApp
   958  01FA                     u1137:	
   959  01FA  0BA0               	decfsz	??_InitApp,f
   960  01FB  29FA               	goto	u1137
   961  01FC  0BA1               	decfsz	??_InitApp+1,f
   962  01FD  29FA               	goto	u1137
   963  01FE  0BA2               	decfsz	??_InitApp+2,f
   964  01FF  29FA               	goto	u1137
   965  0200  0000               	nop
   966  0201                     l1199:	
   967                           
   968                           ;user.c: 54:     RA7 = 0;
   969  0201  1283               	bcf	3,5	;RP0=0, select bank0
   970  0202  1303               	bcf	3,6	;RP1=0, select bank0
   971  0203  1385               	bcf	5,7	;volatile
   972  0204                     l1201:	
   973                           
   974                           ;user.c: 57:     if (RB4==0) {
   975  0204  1A06               	btfsc	6,4	;volatile
   976  0205  2A07               	goto	u871
   977  0206  2A08               	goto	u870
   978  0207                     u871:	
   979  0207  2A0A               	goto	l177
   980  0208                     u870:	
   981  0208                     l1203:	
   982                           
   983                           ;user.c: 58:         movement_direction = 0;
   984  0208  01FA               	clrf	_movement_direction
   985                           
   986                           ;user.c: 59:     } else if (RB5==0) {
   987  0209  2A10               	goto	l1209
   988  020A                     l177:	
   989  020A  1A86               	btfsc	6,5	;volatile
   990  020B  2A0D               	goto	u881
   991  020C  2A0E               	goto	u880
   992  020D                     u881:	
   993  020D  2A08               	goto	l1203
   994  020E                     u880:	
   995  020E                     l1205:	
   996                           
   997                           ;user.c: 60:         movement_direction = 1;
   998  020E  01FA               	clrf	_movement_direction
   999  020F  0AFA               	incf	_movement_direction,f
  1000  0210                     l1209:	
  1001                           ;user.c: 61:     } else {
  1002                           
  1003                           
  1004                           ;user.c: 66:     RA0 = 0;
  1005  0210  1005               	bcf	5,0	;volatile
  1006  0211                     l1211:	
  1007                           
  1008                           ;user.c: 67:     RA1 = 0;
  1009  0211  1085               	bcf	5,1	;volatile
  1010  0212                     l1213:	
  1011                           
  1012                           ;user.c: 69:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1013  0212  3082               	movlw	130
  1014  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0215  00A1               	movwf	??_InitApp+1
  1017  0216  30DD               	movlw	221
  1018  0217  00A0               	movwf	??_InitApp
  1019  0218                     u1147:	
  1020  0218  0BA0               	decfsz	??_InitApp,f
  1021  0219  2A18               	goto	u1147
  1022  021A  0BA1               	decfsz	??_InitApp+1,f
  1023  021B  2A18               	goto	u1147
  1024  021C  0000               	nop
  1025  021D                     l1215:	
  1026                           
  1027                           ;user.c: 71:     RA6 = 1;
  1028  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1029  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1030  021F  1705               	bsf	5,6	;volatile
  1031  0220                     l1217:	
  1032                           
  1033                           ;user.c: 74:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1034  0220  3082               	movlw	130
  1035  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0223  00A1               	movwf	??_InitApp+1
  1038  0224  30DD               	movlw	221
  1039  0225  00A0               	movwf	??_InitApp
  1040  0226                     u1157:	
  1041  0226  0BA0               	decfsz	??_InitApp,f
  1042  0227  2A26               	goto	u1157
  1043  0228  0BA1               	decfsz	??_InitApp+1,f
  1044  0229  2A26               	goto	u1157
  1045  022A  0000               	nop
  1046  022B                     l1219:	
  1047                           
  1048                           ;user.c: 76:     temp=PORTB;
  1049  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1050  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1051  022D  0806               	movf	6,w	;volatile
  1052  022E  00A0               	movwf	??_InitApp
  1053  022F  0820               	movf	??_InitApp,w
  1054  0230  00F9               	movwf	_temp	;volatile
  1055  0231                     l1221:	
  1056                           
  1057                           ;user.c: 77:     INTCON = 0b10011000;
  1058  0231  3098               	movlw	152
  1059  0232  008B               	movwf	11	;volatile
  1060  0233                     l1223:	
  1061                           
  1062                           ;user.c: 78:     INTEDG = 0;
  1063  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1064  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1065  0235  1301               	bcf	1,6	;volatile
  1066  0236                     l181:	
  1067  0236  0008               	return
  1068  0237                     __end_of_InitApp:	
  1069                           
  1070                           	psect	text2
  1071  023B                     __ptext2:	
  1072 ;; *************** function _ConfigureOscillator *****************
  1073 ;; Defined at:
  1074 ;;		line 18 in file "system.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		None
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1088 ;;      Params:         0       0       0       0
  1089 ;;      Locals:         0       0       0       0
  1090 ;;      Temps:          0       0       0       0
  1091 ;;      Totals:         0       0       0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _ConfigureOscillator
  1104  023B                     _ConfigureOscillator:	
  1105  023B                     l136:	
  1106                           ;incstack = 0
  1107                           ; Regs used in _ConfigureOscillator: []
  1108                           
  1109  023B  0008               	return
  1110  023C                     __end_of_ConfigureOscillator:	
  1111                           
  1112                           	psect	text3
  1113  0017                     __ptext3:	
  1114 ;; *************** function _my_isr_routine *****************
  1115 ;; Defined at:
  1116 ;;		line 32 in file "interrupts.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1130 ;;      Params:         0       0       0       0
  1131 ;;      Locals:         0       0       0       0
  1132 ;;      Temps:          5       0       0       0
  1133 ;;      Totals:         5       0       0       0
  1134 ;;Total ram usage:        5 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		Interrupt level 1
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _my_isr_routine
  1145  0017                     _my_isr_routine:	
  1146  0017                     i1l1003:	
  1147                           
  1148                           ;interrupts.c: 39:     if(INTF){
  1149  0017  1C8B               	btfss	11,1	;volatile
  1150  0018  281A               	goto	u41_21
  1151  0019  281B               	goto	u41_20
  1152  001A                     u41_21:	
  1153  001A  286C               	goto	i1l39
  1154  001B                     u41_20:	
  1155  001B                     i1l1005:	
  1156                           
  1157                           ;interrupts.c: 41:         if (RB4==0 && RB5==0 ) {
  1158  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1159  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1160  001D  1A06               	btfsc	6,4	;volatile
  1161  001E  2820               	goto	u42_21
  1162  001F  2821               	goto	u42_20
  1163  0020                     u42_21:	
  1164  0020  2828               	goto	i1l40
  1165  0021                     u42_20:	
  1166  0021                     i1l1007:	
  1167  0021  1A86               	btfsc	6,5	;volatile
  1168  0022  2824               	goto	u43_21
  1169  0023  2825               	goto	u43_20
  1170  0024                     u43_21:	
  1171  0024  2828               	goto	i1l40
  1172  0025                     u43_20:	
  1173  0025                     i1l1009:	
  1174                           
  1175                           ;interrupts.c: 43:             RA0 = 0;
  1176  0025  1005               	bcf	5,0	;volatile
  1177                           
  1178                           ;interrupts.c: 44:             RA1 = 0;
  1179  0026  1085               	bcf	5,1	;volatile
  1180                           
  1181                           ;interrupts.c: 46:         } else if (RA0==1 || RA1==1 ) {
  1182  0027  2860               	goto	i1l41
  1183  0028                     i1l40:	
  1184  0028  1805               	btfsc	5,0	;volatile
  1185  0029  282B               	goto	u44_21
  1186  002A  282C               	goto	u44_20
  1187  002B                     u44_21:	
  1188  002B  2830               	goto	i1l44
  1189  002C                     u44_20:	
  1190  002C                     i1l1011:	
  1191  002C  1C85               	btfss	5,1	;volatile
  1192  002D  282F               	goto	u45_21
  1193  002E  2830               	goto	u45_20
  1194  002F                     u45_21:	
  1195  002F  283D               	goto	i1l1015
  1196  0030                     u45_20:	
  1197  0030                     i1l44:	
  1198                           
  1199                           ;interrupts.c: 48:             RA0 = 0;
  1200  0030  1005               	bcf	5,0	;volatile
  1201                           
  1202                           ;interrupts.c: 49:             RA1 = 0;
  1203  0031  1085               	bcf	5,1	;volatile
  1204  0032                     i1l1013:	
  1205                           
  1206                           ;interrupts.c: 50:             movement_direction = (movement_direction==0)?1:0;
  1207  0032  087A               	movf	_movement_direction,w
  1208  0033  1903               	btfsc	3,2
  1209  0034  2836               	goto	u46_21
  1210  0035  2838               	goto	u46_20
  1211  0036                     u46_21:	
  1212  0036  3001               	movlw	1
  1213  0037  2839               	goto	u47_20
  1214  0038                     u46_20:	
  1215  0038  3000               	movlw	0
  1216  0039                     u47_20:	
  1217  0039  00F0               	movwf	??_my_isr_routine
  1218  003A  0870               	movf	??_my_isr_routine,w
  1219  003B  00FA               	movwf	_movement_direction
  1220                           
  1221                           ;interrupts.c: 52:         } else {
  1222  003C  2860               	goto	i1l41
  1223  003D                     i1l1015:	
  1224                           
  1225                           ;interrupts.c: 55:             if(movement_direction==1) {
  1226  003D  037A               	decf	_movement_direction,w
  1227  003E  1D03               	btfss	3,2
  1228  003F  2841               	goto	u48_21
  1229  0040  2842               	goto	u48_20
  1230  0041                     u48_21:	
  1231  0041  2853               	goto	i1l46
  1232  0042                     u48_20:	
  1233  0042                     i1l1017:	
  1234                           
  1235                           ;interrupts.c: 57:                 if (RB4==1) {
  1236  0042  1E06               	btfss	6,4	;volatile
  1237  0043  2845               	goto	u49_21
  1238  0044  2846               	goto	u49_20
  1239  0045                     u49_21:	
  1240  0045  284F               	goto	i1l47
  1241  0046                     u49_20:	
  1242  0046                     i1l1019:	
  1243                           
  1244                           ;interrupts.c: 59:                     RA1 = 0;
  1245  0046  1085               	bcf	5,1	;volatile
  1246                           
  1247                           ;interrupts.c: 61:                     if (RB7==1) {
  1248  0047  1F86               	btfss	6,7	;volatile
  1249  0048  284A               	goto	u50_21
  1250  0049  284B               	goto	u50_20
  1251  004A                     u50_21:	
  1252  004A  2860               	goto	i1l50
  1253  004B                     u50_20:	
  1254  004B                     i1l1021:	
  1255                           
  1256                           ;interrupts.c: 62:                         movement_direction = 1;
  1257  004B  01FA               	clrf	_movement_direction
  1258  004C  0AFA               	incf	_movement_direction,f
  1259                           
  1260                           ;interrupts.c: 63:                         RA0 = 1;
  1261  004D  1405               	bsf	5,0	;volatile
  1262  004E  2860               	goto	i1l41
  1263  004F                     i1l47:	
  1264                           
  1265                           ;interrupts.c: 67:                     RA0 = 0;
  1266  004F  1005               	bcf	5,0	;volatile
  1267  0050                     i1l1023:	
  1268                           
  1269                           ;interrupts.c: 68:                     movement_direction = 0;
  1270  0050  01FA               	clrf	_movement_direction
  1271  0051                     i1l1025:	
  1272                           
  1273                           ;interrupts.c: 69:                     RA1 = 1;
  1274  0051  1485               	bsf	5,1	;volatile
  1275  0052  2860               	goto	i1l41
  1276  0053                     i1l46:	
  1277                           
  1278                           ;interrupts.c: 74:                 if (RB5==1) {
  1279  0053  1E86               	btfss	6,5	;volatile
  1280  0054  2856               	goto	u51_21
  1281  0055  2857               	goto	u51_20
  1282  0056                     u51_21:	
  1283  0056  2858               	goto	i1l51
  1284  0057                     u51_20:	
  1285  0057  284F               	goto	i1l47
  1286  0058                     i1l51:	
  1287                           
  1288                           ;interrupts.c: 81:                     RA1 = 0;
  1289  0058  1085               	bcf	5,1	;volatile
  1290                           
  1291                           ;interrupts.c: 82:                     if (RB7==1) {
  1292  0059  1F86               	btfss	6,7	;volatile
  1293  005A  285C               	goto	u52_21
  1294  005B  285D               	goto	u52_20
  1295  005C                     u52_21:	
  1296  005C  285E               	goto	i1l53
  1297  005D                     u52_20:	
  1298  005D  284B               	goto	i1l1021
  1299  005E                     i1l53:	
  1300                           
  1301                           ;interrupts.c: 86:                         RA0 = 0;
  1302  005E  1005               	bcf	5,0	;volatile
  1303  005F  2860               	goto	i1l41
  1304  0060                     i1l50:	
  1305                           ;interrupts.c: 89:             };
  1306                           
  1307  0060                     i1l41:	
  1308                           
  1309                           ;interrupts.c: 92:         overtorgue_flag = 1;
  1310  0060  01F8               	clrf	_overtorgue_flag
  1311  0061  0AF8               	incf	_overtorgue_flag,f
  1312                           
  1313                           ;interrupts.c: 93:         must_be_closed = 1;
  1314  0062  01F7               	clrf	_must_be_closed
  1315  0063  0AF7               	incf	_must_be_closed,f
  1316                           
  1317                           ;interrupts.c: 94:         RA6 = 1;
  1318  0064  1705               	bsf	5,6	;volatile
  1319  0065                     i1l1035:	
  1320                           
  1321                           ;interrupts.c: 95:         counter=20;
  1322  0065  3014               	movlw	20
  1323  0066  00F5               	movwf	_counter
  1324  0067  3000               	movlw	0
  1325  0068  00F6               	movwf	_counter+1
  1326                           
  1327                           ;interrupts.c: 97:         PORTB;
  1328  0069  0806               	movf	6,w	;volatile
  1329  006A                     i1l1037:	
  1330                           
  1331                           ;interrupts.c: 98:         INTF=0;
  1332  006A  108B               	bcf	11,1	;volatile
  1333                           
  1334                           ;interrupts.c: 99:     } else if (RBIF){
  1335  006B  28EA               	goto	i1l71
  1336  006C                     i1l39:	
  1337  006C  1C0B               	btfss	11,0	;volatile
  1338  006D  286F               	goto	u53_21
  1339  006E  2870               	goto	u53_20
  1340  006F                     u53_21:	
  1341  006F  28EA               	goto	i1l71
  1342  0070                     u53_20:	
  1343  0070                     i1l1039:	
  1344                           
  1345                           ;interrupts.c: 102:         if (RB7==0
  1346  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0072  1B86               	btfsc	6,7	;volatile
  1349  0073  2875               	goto	u54_21
  1350  0074  2876               	goto	u54_20
  1351  0075                     u54_21:	
  1352  0075  2882               	goto	i1l1051
  1353  0076                     u54_20:	
  1354  0076                     i1l1041:	
  1355  0076  1C05               	btfss	5,0	;volatile
  1356  0077  2879               	goto	u55_21
  1357  0078  287A               	goto	u55_20
  1358  0079                     u55_21:	
  1359  0079  2882               	goto	i1l1051
  1360  007A                     u55_20:	
  1361  007A                     i1l1043:	
  1362  007A  0377               	decf	_must_be_closed,w
  1363  007B  1D03               	btfss	3,2
  1364  007C  287E               	goto	u56_21
  1365  007D  287F               	goto	u56_20
  1366  007E                     u56_21:	
  1367  007E  2882               	goto	i1l1051
  1368  007F                     u56_20:	
  1369  007F                     i1l1045:	
  1370                           
  1371                           ;interrupts.c: 104:             && must_be_closed == 1 ){;interrupts.c: 105:            
      +                               RA0 = 0;
  1372  007F  1005               	bcf	5,0	;volatile
  1373  0080                     i1l1047:	
  1374                           
  1375                           ;interrupts.c: 106:                 movement_direction = 0;
  1376  0080  01FA               	clrf	_movement_direction
  1377  0081                     i1l1049:	
  1378                           
  1379                           ;interrupts.c: 107:                 RA1 = 1;
  1380  0081  1485               	bsf	5,1	;volatile
  1381  0082                     i1l1051:	
  1382                           
  1383                           ;interrupts.c: 110:         if (RB6==0) {
  1384  0082  1B06               	btfsc	6,6	;volatile
  1385  0083  2885               	goto	u57_21
  1386  0084  2886               	goto	u57_20
  1387  0085                     u57_21:	
  1388  0085  28B2               	goto	i1l1075
  1389  0086                     u57_20:	
  1390  0086                     i1l1053:	
  1391                           
  1392                           ;interrupts.c: 112:             must_be_closed = 1;
  1393  0086  01F7               	clrf	_must_be_closed
  1394  0087  0AF7               	incf	_must_be_closed,f
  1395  0088                     i1l1055:	
  1396                           
  1397                           ;interrupts.c: 113:             if (movement_direction==1) {
  1398  0088  037A               	decf	_movement_direction,w
  1399  0089  1D03               	btfss	3,2
  1400  008A  288C               	goto	u58_21
  1401  008B  288D               	goto	u58_20
  1402  008C                     u58_21:	
  1403  008C  28AD               	goto	i1l59
  1404  008D                     u58_20:	
  1405  008D                     i1l1057:	
  1406                           
  1407                           ;interrupts.c: 114:                 if (RB5==0) {
  1408  008D  1A86               	btfsc	6,5	;volatile
  1409  008E  2890               	goto	u59_21
  1410  008F  2891               	goto	u59_20
  1411  0090                     u59_21:	
  1412  0090  2894               	goto	i1l60
  1413  0091                     u59_20:	
  1414  0091                     i1l1059:	
  1415                           
  1416                           ;interrupts.c: 115:                     RA0 = 0;
  1417  0091  1005               	bcf	5,0	;volatile
  1418                           
  1419                           ;interrupts.c: 116:                     RA1 = 0;
  1420  0092  1085               	bcf	5,1	;volatile
  1421                           
  1422                           ;interrupts.c: 117:                 } else {
  1423  0093  28AB               	goto	i1l1069
  1424  0094                     i1l60:	
  1425                           
  1426                           ;interrupts.c: 118:                     if(RA5==0) {
  1427  0094  1A85               	btfsc	5,5	;volatile
  1428  0095  2897               	goto	u60_21
  1429  0096  2898               	goto	u60_20
  1430  0097                     u60_21:	
  1431  0097  28AB               	goto	i1l1069
  1432  0098                     u60_20:	
  1433  0098                     i1l1061:	
  1434                           
  1435                           ;interrupts.c: 119:                         RA0 = 0;
  1436  0098  1005               	bcf	5,0	;volatile
  1437                           
  1438                           ;interrupts.c: 120:                         RA1 = 1;
  1439  0099  1485               	bsf	5,1	;volatile
  1440  009A                     i1l1063:	
  1441                           
  1442                           ;interrupts.c: 121:                         _delay((unsigned long)((500)*(4000000/4000.0
      +                          )));
  1443  009A  3003               	movlw	3
  1444  009B  00F2               	movwf	??_my_isr_routine+2
  1445  009C  308A               	movlw	138
  1446  009D  00F1               	movwf	??_my_isr_routine+1
  1447  009E  3055               	movlw	85
  1448  009F  00F0               	movwf	??_my_isr_routine
  1449  00A0                     u116_27:	
  1450  00A0  0BF0               	decfsz	??_my_isr_routine,f
  1451  00A1  28A0               	goto	u116_27
  1452  00A2  0BF1               	decfsz	??_my_isr_routine+1,f
  1453  00A3  28A0               	goto	u116_27
  1454  00A4  0BF2               	decfsz	??_my_isr_routine+2,f
  1455  00A5  28A0               	goto	u116_27
  1456  00A6  28A7               	nop2
  1457  00A7                     i1l1065:	
  1458                           
  1459                           ;interrupts.c: 122:                         RA1 = 0;
  1460  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1461  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1462  00A9  1085               	bcf	5,1	;volatile
  1463  00AA                     i1l1067:	
  1464                           
  1465                           ;interrupts.c: 123:                         movement_direction = 0;
  1466  00AA  01FA               	clrf	_movement_direction
  1467  00AB                     i1l1069:	
  1468                           
  1469                           ;interrupts.c: 126:                 overtorgue_flag=0;
  1470  00AB  01F8               	clrf	_overtorgue_flag
  1471                           
  1472                           ;interrupts.c: 127:             } else {
  1473  00AC  28B2               	goto	i1l1075
  1474  00AD                     i1l59:	
  1475                           
  1476                           ;interrupts.c: 128:                 RA1 = 0;
  1477  00AD  1085               	bcf	5,1	;volatile
  1478                           
  1479                           ;interrupts.c: 129:                 RA0 = 0;
  1480  00AE  1005               	bcf	5,0	;volatile
  1481  00AF                     i1l1071:	
  1482                           
  1483                           ;interrupts.c: 130:                 overtorgue_flag=0;
  1484  00AF  01F8               	clrf	_overtorgue_flag
  1485  00B0                     i1l1073:	
  1486                           
  1487                           ;interrupts.c: 131:                 movement_direction = 1;
  1488  00B0  01FA               	clrf	_movement_direction
  1489  00B1  0AFA               	incf	_movement_direction,f
  1490  00B2                     i1l1075:	
  1491                           
  1492                           ;interrupts.c: 136:         if (RB4==0 && RB5==0) {
  1493  00B2  1A06               	btfsc	6,4	;volatile
  1494  00B3  28B5               	goto	u61_21
  1495  00B4  28B6               	goto	u61_20
  1496  00B5                     u61_21:	
  1497  00B5  28BD               	goto	i1l64
  1498  00B6                     u61_20:	
  1499  00B6                     i1l1077:	
  1500  00B6  1A86               	btfsc	6,5	;volatile
  1501  00B7  28B9               	goto	u62_21
  1502  00B8  28BA               	goto	u62_20
  1503  00B9                     u62_21:	
  1504  00B9  28BD               	goto	i1l64
  1505  00BA                     u62_20:	
  1506  00BA                     i1l1079:	
  1507                           
  1508                           ;interrupts.c: 138:             RA0 = 0;
  1509  00BA  1005               	bcf	5,0	;volatile
  1510                           
  1511                           ;interrupts.c: 139:             RA1 = 0;
  1512  00BB  1085               	bcf	5,1	;volatile
  1513                           
  1514                           ;interrupts.c: 141:         } else if (RB4==0) {
  1515  00BC  28E8               	goto	i1l1097
  1516  00BD                     i1l64:	
  1517  00BD  1A06               	btfsc	6,4	;volatile
  1518  00BE  28C0               	goto	u63_21
  1519  00BF  28C1               	goto	u63_20
  1520  00C0                     u63_21:	
  1521  00C0  28C9               	goto	i1l66
  1522  00C1                     u63_20:	
  1523  00C1                     i1l1081:	
  1524                           
  1525                           ;interrupts.c: 143:             RA0 = 0;
  1526  00C1  1005               	bcf	5,0	;volatile
  1527  00C2                     i1l1083:	
  1528                           
  1529                           ;interrupts.c: 144:             movement_direction = 0;
  1530  00C2  01FA               	clrf	_movement_direction
  1531                           
  1532                           ;interrupts.c: 145:             must_be_closed = 0;
  1533  00C3  01F7               	clrf	_must_be_closed
  1534  00C4                     i1l1085:	
  1535                           
  1536                           ;interrupts.c: 146:             counter=20;
  1537  00C4  3014               	movlw	20
  1538  00C5  00F5               	movwf	_counter
  1539  00C6  3000               	movlw	0
  1540  00C7  00F6               	movwf	_counter+1
  1541                           
  1542                           ;interrupts.c: 148:         } else if (RB5==0) {
  1543  00C8  28E8               	goto	i1l1097
  1544  00C9                     i1l66:	
  1545  00C9  1A86               	btfsc	6,5	;volatile
  1546  00CA  28CC               	goto	u64_21
  1547  00CB  28CD               	goto	u64_20
  1548  00CC                     u64_21:	
  1549  00CC  28D1               	goto	i1l68
  1550  00CD                     u64_20:	
  1551  00CD                     i1l1087:	
  1552                           
  1553                           ;interrupts.c: 150:             RA1 = 0;
  1554  00CD  1085               	bcf	5,1	;volatile
  1555                           
  1556                           ;interrupts.c: 151:             movement_direction = 1;
  1557  00CE  01FA               	clrf	_movement_direction
  1558  00CF  0AFA               	incf	_movement_direction,f
  1559                           
  1560                           ;interrupts.c: 153:         } else if (RB4==1
  1561  00D0  28E8               	goto	i1l1097
  1562  00D1                     i1l68:	
  1563  00D1  1E06               	btfss	6,4	;volatile
  1564  00D2  28D4               	goto	u65_21
  1565  00D3  28D5               	goto	u65_20
  1566  00D4                     u65_21:	
  1567  00D4  28E8               	goto	i1l67
  1568  00D5                     u65_20:	
  1569  00D5                     i1l1089:	
  1570  00D5  087A               	movf	_movement_direction,w
  1571  00D6  1D03               	btfss	3,2
  1572  00D7  28D9               	goto	u66_21
  1573  00D8  28DA               	goto	u66_20
  1574  00D9                     u66_21:	
  1575  00D9  28E8               	goto	i1l67
  1576  00DA                     u66_20:	
  1577  00DA                     i1l1091:	
  1578  00DA  0877               	movf	_must_be_closed,w
  1579  00DB  1D03               	btfss	3,2
  1580  00DC  28DE               	goto	u67_21
  1581  00DD  28DF               	goto	u67_20
  1582  00DE                     u67_21:	
  1583  00DE  28E8               	goto	i1l67
  1584  00DF                     u67_20:	
  1585  00DF                     i1l1093:	
  1586  00DF  1885               	btfsc	5,1	;volatile
  1587  00E0  28E2               	goto	u68_21
  1588  00E1  28E3               	goto	u68_20
  1589  00E2                     u68_21:	
  1590  00E2  28E8               	goto	i1l67
  1591  00E3                     u68_20:	
  1592  00E3                     i1l1095:	
  1593                           
  1594                           ;interrupts.c: 156:                         && RA1==0) {;interrupts.c: 158:             
      +                          RA6 = 1;
  1595  00E3  1705               	bsf	5,6	;volatile
  1596                           
  1597                           ;interrupts.c: 159:             RA0 = 1;
  1598  00E4  1405               	bsf	5,0	;volatile
  1599                           
  1600                           ;interrupts.c: 160:             movement_direction = 1;
  1601  00E5  01FA               	clrf	_movement_direction
  1602  00E6  0AFA               	incf	_movement_direction,f
  1603  00E7  28E8               	goto	i1l1097
  1604  00E8                     i1l67:	
  1605  00E8                     i1l1097:	
  1606                           
  1607                           ;interrupts.c: 162:         PORTB;
  1608  00E8  0806               	movf	6,w	;volatile
  1609  00E9                     i1l1099:	
  1610                           
  1611                           ;interrupts.c: 163:         RBIF=0;
  1612  00E9  100B               	bcf	11,0	;volatile
  1613  00EA                     i1l71:	
  1614  00EA  0874               	movf	??_my_isr_routine+4,w
  1615  00EB  008A               	movwf	10
  1616  00EC  0E73               	swapf	(??_my_isr_routine+3)^(0+4294967168),w
  1617  00ED  0083               	movwf	3
  1618  00EE  0EFE               	swapf	btemp,f
  1619  00EF  0E7E               	swapf	btemp,w
  1620  00F0  0009               	retfie
  1621  00F1                     __end_of_my_isr_routine:	
  1622  007E                     btemp	set	126	;btemp
  1623  007E                     wtemp0	set	126
  1624                           
  1625                           	psect	intentry
  1626  0004                     __pintentry:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _my_isr_routine: [wreg+status,2+status,0]
  1629                           
  1630  0004                     interrupt_function:	
  1631  007E                     saved_w	set	btemp
  1632  0004  00FE               	movwf	btemp
  1633  0005  0E03               	swapf	3,w
  1634  0006  00F3               	movwf	??_my_isr_routine+3
  1635  0007  080A               	movf	10,w
  1636  0008  00F4               	movwf	??_my_isr_routine+4
  1637  0009  2817               	ljmp	_my_isr_routine


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitApp

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_isr_routine                                       5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      10        0.0%
ABS                  0      0      11       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 18 11:00:53 2020

                 __CFG_CP$OFF 0000                           l120 016B                           l112 0107  
                         l122 0185                           l114 013F                           l123 017D  
                         l116 015F                           l117 015A                           l136 023B  
                         l128 0195                           l181 0236                           l177 020A  
                         _RA0 0028                           _RA1 0029                           _RA2 002A  
                         _RA3 002B                           _RA5 002D                           _RB4 0034  
                         _RA6 002E                           _RB5 0035                           _RA7 002F  
                         _RB6 0036                           _RB7 0037                  __CFG_CPD$OFF 0000  
                         u900 0100                           u901 00FF                           u910 010D  
                         u911 010C                           u920 0111                           u921 0110  
                         u930 0143                           u931 0142                           u940 0147  
                         u941 0146                           u870 0208                           u950 0156  
                         u871 0207                           u951 0155                           u880 020E  
                         u960 0163                           u881 020D                           u961 0162  
                         u970 0167                           u890 00F9                           u971 0166  
                         u955 0152                           u891 00F8                           u980 016F  
                         u981 016E                           u990 0173                           u991 0172  
             _overtorgue_flag 0078                  __CFG_LVP$OFF 0000                          l1201 0204  
                        l1211 0211                          l1203 0208                          l1221 0231  
                        l1213 0212                          l1205 020E                          l1223 0233  
                        l1215 021D                          l1231 00F9                          l1217 0220  
                        l1209 0210                          l1241 0111                          l1233 00FB  
                        l1225 00F1                          l1219 022B                          l1171 01BA  
                        l1251 0143                          l1243 0114                          l1235 0100  
                        l1227 00F2                          l1181 01CA                          l1173 01C1  
                        l1261 0167                          l1253 0147                          l1245 011F  
                        l1237 0104                          l1229 00F3                          l1191 01ED  
                        l1183 01CB                          l1175 01C5                          l1167 01B5  
                        l1271 017E                          l1263 016F                          l1255 0149  
                        l1247 012D                          l1239 010D                          l1193 01F0  
                        l1185 01CC                          l1177 01C6                          l1169 01B6  
                        l1281 0191                          l1273 0180                          l1265 0173  
                        l1257 0156                          l1249 013B                          l1195 01F1  
                        l1187 01DB                          l1179 01C9                          l1267 0177  
                        l1259 0163                          l1283 0198                          l1197 01F2  
                        l1189 01DE                          l1285 019E                          l1277 0189  
                        l1269 017B                          l1199 0201                          l1287 01A2  
                        l1279 018D                          l1289 01A4                          u1000 0177  
                        u1001 0176                          u1010 017B                          u1011 017A  
                        u1020 0184                          u1021 0183                          u1030 0189  
                        u1031 0188                          u1040 018D                          u1041 018C  
                        u1050 0191                          u1107 01AC                          u1051 0190  
                        u1060 01A2                          u1117 01D4                          u1061 01A1  
                        u1127 01E6                          u1137 01FA                          u1147 0218  
                        u1157 0226                          u1077 011A                          u1087 0128  
                        u1097 0136                          _INTF 0059                          i1l40 0028  
                        _RBIF 0058                          i1l41 0060                          i1l50 0060  
                        i1l51 0058                          i1l60 0094                          i1l44 0030  
                        i1l53 005E                          i1l46 0053                          i1l71 00EA  
                        i1l47 004F                          i1l39 006C                          i1l64 00BD  
                        i1l66 00C9                          i1l67 00E8                          i1l59 00AD  
                        i1l68 00D1                          _main 00F1                          _temp 0079  
                        btemp 007E                          start 000A               __end_of_InitApp 0237  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _CMCON 001F  
                       u41_20 001B                         u41_21 001A                         u50_20 004B  
                       u42_20 0021                         u50_21 004A                         u42_21 0020  
                       u51_20 0057                         u43_20 0025                         u51_21 0056  
                       u43_21 0024                         _PORTA 0005                         _PORTB 0006  
                       u60_20 0098                         u52_20 005D                         u44_20 002C  
                       u60_21 0097                         u52_21 005C                         u44_21 002B  
                       u61_20 00B6                         u53_20 0070                         u45_20 0030  
                       u61_21 00B5                         u53_21 006F                         u45_21 002F  
                       u62_20 00BA                         u54_20 0076                         u46_20 0038  
                       u62_21 00B9                         u54_21 0075                         u46_21 0036  
                       u63_20 00C1                         u55_20 007A                         u47_20 0039  
                       u63_21 00C0                         u55_21 0079                         u64_20 00CD  
                       u56_20 007F                         u48_20 0042                         u64_21 00CC  
                       u56_21 007E                         u48_21 0041                         u65_20 00D5  
                       u57_20 0086                         u49_20 0046                         u65_21 00D4  
                       u57_21 0085                         u49_21 0045                         _TRISA 0085  
                       _TRISB 0086                         u66_20 00DA                         u58_20 008D  
                       u66_21 00D9                         u58_21 008C                         u67_20 00DF  
                       u59_20 0091                         u67_21 00DE                         u59_21 0090  
                       u68_20 00E3                         u68_21 00E2           _ConfigureOscillator 023B  
                       _nRBPU 040F                __CFG_BOREN$OFF 0000                         pclath 000A  
                       status 0003                         wtemp0 007E          ?_ConfigureOscillator 0070  
              __CFG_MCLRE$OFF 0000               __initialization 000B                  __end_of_main 01B5  
                      ??_main 0023                        i1l1011 002C                        i1l1003 0017  
                      i1l1021 004B                        i1l1013 0032                        i1l1005 001B  
                      i1l1023 0050                        i1l1015 003D                        i1l1007 0021  
                      i1l1041 0076                        i1l1025 0051                        i1l1017 0042  
                      i1l1009 0025                        i1l1043 007A                        i1l1051 0082  
                      i1l1035 0065                        i1l1019 0046                        i1l1061 0098  
                      i1l1053 0086                        i1l1045 007F                        i1l1037 006A  
                      i1l1071 00AF                        i1l1063 009A                        i1l1055 0088  
                      i1l1047 0080                        i1l1039 0070                        i1l1081 00C1  
                      i1l1073 00B0                        i1l1065 00A7                        i1l1057 008D  
                      i1l1049 0081                        i1l1091 00DA                        i1l1083 00C2  
                      i1l1067 00AA                        i1l1059 0091                        i1l1075 00B2  
                      i1l1093 00DF                        i1l1085 00C4                        i1l1077 00B6  
                      i1l1069 00AB                        i1l1095 00E3                        i1l1087 00CD  
                      i1l1079 00BA                        i1l1089 00D5                        i1l1097 00E8  
                      i1l1099 00E9                        u116_27 00A0                        _INTEDG 040E  
                      _INTCON 000B                     ??_InitApp 0020         ??_ConfigureOscillator 0020  
              __CFG_PWRTE$OFF 0000                  __pdataCOMMON 0075                        saved_w 007E  
     __end_of__initialization 0015                __pcstackCOMMON 0070                    __pmaintext 00F1  
                  __pintentry 0004            _movement_direction 007A       __size_of_my_isr_routine 00DA  
                     _InitApp 01B5                       __ptext1 01B5                       __ptext2 023B  
                     __ptext3 0017                       _counter 0075          end_of_initialization 0015  
 __end_of_ConfigureOscillator 023C                 __pidataCOMMON 0237           start_initialization 000B  
              _my_isr_routine 0017                   __pbssCOMMON 0079                     ___latbits 0000  
               __pcstackBANK0 0020        __end_of_my_isr_routine 00F1                      ?_InitApp 0070  
             ?_my_isr_routine 0070             interrupt_function 0004              __size_of_InitApp 0082  
               __size_of_main 00C4  __size_of_ConfigureOscillator 0001                      intlevel1 0000  
              _must_be_closed 0077              ??_my_isr_routine 0070            __CFG_FOSC$INTOSCIO 0000  
